[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Learn Collaborate Build",
    "section": "",
    "text": "Let’s Do Digital has been a centre for safe and open discussion and learning around digital health since 2022. We have had two great conferences and several webinars to date.\nOur first Programming in Healthcare course is now open to registration. Please find further details about the course and registration here.\nLook out for another series of learning opportunities. We are planning to open the floor to computer scientists, data scientists, cybersecurity specialists, basically anyone in the digital domain who works in or around healthcare, to ask a clinician about their workflows, workloads, and thought processes. We hope to enable those in digital fields to better understand the data and information in front of them by granting them direct access to clinicians on the front line.\n\n    Individual supporters\n    If you wish to support us, please follow the Sponsor link in the navigation bar above.\n\n\n\n    Healthcare group supporters\n    If you wish to support us, please follow the Sponsor link in the navigation bar above."
  },
  {
    "objectID": "conferences/2023/agenda.html",
    "href": "conferences/2023/agenda.html",
    "title": "Agenda 2023",
    "section": "",
    "text": "2023 Conference\n    Agenda\n    Bios\n    Posters\n    Maps\n    Organising Committee\n8:30 – 9:30 – Welcome coffee and tea\n9:30 – Mark Bailey – Interim Chair of Council, Faculty of Clinical Informatics and Locum Respiratory Consultant – Opening talk"
  },
  {
    "objectID": "conferences/2023/agenda.html#morning-session-1",
    "href": "conferences/2023/agenda.html#morning-session-1",
    "title": "Agenda 2023",
    "section": "9:35 – Morning session 1",
    "text": "9:35 – Morning session 1\n9:35 – Chair – Mark Bailey 9:40 – TBC – Patient representative 9:50 – Prof Joe McDonald – Medical Director at Sleepstation, SARD JV, Parsek and Ethical Healthcare Consulting- 10 Lessons from 20 Years in Health IT 10:00 – Dom Main – GP and Clinical Engineer at Healthtech1, and Anita Phung – General Practitioner, Metabolic Health Doctor, Health Optimisation Clinician – Robotic Process Automation in Primary Care 10:10 – Q&A"
  },
  {
    "objectID": "conferences/2023/agenda.html#coffee-break",
    "href": "conferences/2023/agenda.html#coffee-break",
    "title": "Agenda 2023",
    "section": "10:25 – Coffee break",
    "text": "10:25 – Coffee break\n11:05 – Morning session 2 11:05 – Chair – Helen Winter – SWAG cancer alliance clinical director and Medical Oncologist at Bristol Royal Infirmary Hospital 11:10 – Matimba Swama – PhD candidate – Future Nanomedicines: Building a regulatory framework for the first-in-human nanoswarm cancer clinical trial 11:25 – Sophie Brooks – member of the National Digital Shared Decision-Making Council with NHSE, member of the LND local council, MSc student in Digital Health at UCL 11:35 – Kareem El-Wakeel, Senior Programmer, Collaboration Digital Ltd – An innovative way to streamline multidisciplinary team meetings, safely, efficiently, and digitally. 11:45 – Q&A"
  },
  {
    "objectID": "conferences/2023/agenda.html#debate",
    "href": "conferences/2023/agenda.html#debate",
    "title": "Agenda 2023",
    "section": "12:00 – Debate",
    "text": "12:00 – Debate\n“This house believes that clinicians should be allowed to directly code and create health apps” Chair – Anita Phung For – Marcus Baw, Clinical Informatician, Software Developer and other roles Against – Harold Thimbleby – Professor in Healthcare computer sciences, Swansea University (2 x 10 min presentations, 2 x 5 min responses, 20 min Q&A to the floor)"
  },
  {
    "objectID": "conferences/2023/agenda.html#lunch-with-posters",
    "href": "conferences/2023/agenda.html#lunch-with-posters",
    "title": "Agenda 2023",
    "section": "12:50 – 13:50 – Lunch with posters",
    "text": "12:50 – 13:50 – Lunch with posters"
  },
  {
    "objectID": "conferences/2023/agenda.html#afternoon-session-1",
    "href": "conferences/2023/agenda.html#afternoon-session-1",
    "title": "Agenda 2023",
    "section": "13:50 – Afternoon session 1",
    "text": "13:50 – Afternoon session 1\n13:50 – Chair – Alistair Cannon – Psychiatrist and education fellow at South London & Maudsley 13:55 – Kevin Monk – CEO SardJV – AI Beyond The Hype – a real live demo of useful things AI can do for the NHS and patients. 14:05 – Grant Vallance- Information Manager, Oxford University Hospital NHS Foundation Trust and Joe Channing Software Engineer, Oxford University Hospital NHS Foundation Trust- Clinical Services Providing Clinical Software 14:15 – Mark Wardle – CCIO and Consultant Neurologist, Cardiff and Vale University Health Board – 10 lessons from a journey through health and care data 14:25 – Q&A"
  },
  {
    "objectID": "conferences/2023/agenda.html#coffee-break-1",
    "href": "conferences/2023/agenda.html#coffee-break-1",
    "title": "Agenda 2023",
    "section": "14:40 – Coffee break",
    "text": "14:40 – Coffee break"
  },
  {
    "objectID": "conferences/2023/agenda.html#afternoon-session-2",
    "href": "conferences/2023/agenda.html#afternoon-session-2",
    "title": "Agenda 2023",
    "section": "15:20 – Afternoon session 2",
    "text": "15:20 – Afternoon session 2\n15:20 – Chair – TBC 15:25 – Poster awards 15:35 – Rajesh Sivaprakasam – Robotic Renal Failure Surgeon, Lead for Robotic renal failure Surgery, Research and Education at Barts health NHS Trust- Are we ready for digital Healthcare? 15:45 – Andrea Preston – Macmillan Divisional Lead Pharmacist – Haematology, University Hospitals Bristol & Weston NHS Foundation Trust 15:55 – Majid Kazmi- Director of Innovation for Cancer and Surgery; Deputy Medical Director Guy’s and St Thomas’ NHS Foundation Trust and Paul Landau- CEO Careology – Digital cancer care: how to empower patients beyond the hospital walls 16:05 – Q&A 16:20 – close"
  },
  {
    "objectID": "conferences/2023/posters.html",
    "href": "conferences/2023/posters.html",
    "title": "Posters",
    "section": "",
    "text": "2023 Conference\n    Agenda\n    Bios\n    Posters\n    Maps\n    Organising Committee\nBelow are posters and also links to video presentations of works submitted to the conference."
  },
  {
    "objectID": "conferences/2023/posters.html#mary-hannah-bonnett-poster",
    "href": "conferences/2023/posters.html#mary-hannah-bonnett-poster",
    "title": "Posters",
    "section": "Mary Hannah Bonnett Poster",
    "text": "Mary Hannah Bonnett Poster\n\n\n\n\n\nVideo Presentation"
  },
  {
    "objectID": "conferences/2023/posters.html#benjamin-choudhury-1st-poster",
    "href": "conferences/2023/posters.html#benjamin-choudhury-1st-poster",
    "title": "Posters",
    "section": "Benjamin Choudhury 1st Poster",
    "text": "Benjamin Choudhury 1st Poster\n\n\n\n\n\nVideo Presentation"
  },
  {
    "objectID": "conferences/2023/posters.html#benjamin-choudhury-2nd-poster",
    "href": "conferences/2023/posters.html#benjamin-choudhury-2nd-poster",
    "title": "Posters",
    "section": "Benjamin Choudhury 2nd Poster",
    "text": "Benjamin Choudhury 2nd Poster\n\n\n\n\n\nVideo Presentation"
  },
  {
    "objectID": "conferences/2023/posters.html#dylan-goh",
    "href": "conferences/2023/posters.html#dylan-goh",
    "title": "Posters",
    "section": "Dylan Goh",
    "text": "Dylan Goh\n\n\n\n\n\nVideo Presentation"
  },
  {
    "objectID": "conferences/2023/posters.html#aminul-islam-and-abu-sufian",
    "href": "conferences/2023/posters.html#aminul-islam-and-abu-sufian",
    "title": "Posters",
    "section": "Aminul Islam and Abu Sufian",
    "text": "Aminul Islam and Abu Sufian\n\n\n\n\n\nVideo Presentation"
  },
  {
    "objectID": "conferences/2023/posters.html#nick-leney",
    "href": "conferences/2023/posters.html#nick-leney",
    "title": "Posters",
    "section": "Nick Leney",
    "text": "Nick Leney\n\n\n\n\n\nVideo Presentation"
  },
  {
    "objectID": "conferences/2023/posters.html#dionne-matthews",
    "href": "conferences/2023/posters.html#dionne-matthews",
    "title": "Posters",
    "section": "Dionne Matthews",
    "text": "Dionne Matthews\n\n\n\n\n\nVideo Presentation"
  },
  {
    "objectID": "conferences/2023/posters.html#usama-shahid",
    "href": "conferences/2023/posters.html#usama-shahid",
    "title": "Posters",
    "section": "Usama Shahid",
    "text": "Usama Shahid\n\n\n\n\n\nVideo Presentation"
  },
  {
    "objectID": "conferences/2023/posters.html#helen-winter",
    "href": "conferences/2023/posters.html#helen-winter",
    "title": "Posters",
    "section": "Helen Winter",
    "text": "Helen Winter\n\n\n\n\n\nNo video presentation for this poster."
  },
  {
    "objectID": "conferences/2023/organising-committee.html",
    "href": "conferences/2023/organising-committee.html",
    "title": "Organising Committee",
    "section": "",
    "text": "2023 Conference\n    Agenda\n    Bios\n    Posters\n    Maps\n    Organising Committee"
  },
  {
    "objectID": "conferences/2023/organising-committee.html#dr-mark-a-bailey--chief-conference-organiser",
    "href": "conferences/2023/organising-committee.html#dr-mark-a-bailey--chief-conference-organiser",
    "title": "Organising Committee",
    "section": "Dr Mark A Bailey- Chief Conference Organiser",
    "text": "Dr Mark A Bailey- Chief Conference Organiser"
  },
  {
    "objectID": "conferences/2023/organising-committee.html#dr-anita-phung",
    "href": "conferences/2023/organising-committee.html#dr-anita-phung",
    "title": "Organising Committee",
    "section": "Dr Anita Phung",
    "text": "Dr Anita Phung"
  },
  {
    "objectID": "conferences/2023/organising-committee.html#mr-sobath-premaratne",
    "href": "conferences/2023/organising-committee.html#mr-sobath-premaratne",
    "title": "Organising Committee",
    "section": "Mr Sobath Premaratne",
    "text": "Mr Sobath Premaratne"
  },
  {
    "objectID": "conferences/2023/organising-committee.html#dr-dom-main",
    "href": "conferences/2023/organising-committee.html#dr-dom-main",
    "title": "Organising Committee",
    "section": "Dr Dom Main",
    "text": "Dr Dom Main"
  },
  {
    "objectID": "conferences/2023/organising-committee.html#dr-dylan-goh",
    "href": "conferences/2023/organising-committee.html#dr-dylan-goh",
    "title": "Organising Committee",
    "section": "Dr Dylan Goh",
    "text": "Dr Dylan Goh"
  },
  {
    "objectID": "conferences/2023/organising-committee.html#dr-alistair-cannon",
    "href": "conferences/2023/organising-committee.html#dr-alistair-cannon",
    "title": "Organising Committee",
    "section": "Dr Alistair Cannon",
    "text": "Dr Alistair Cannon"
  },
  {
    "objectID": "conferences/2023/organising-committee.html#dr-aparna-ghosh",
    "href": "conferences/2023/organising-committee.html#dr-aparna-ghosh",
    "title": "Organising Committee",
    "section": "Dr Aparna Ghosh",
    "text": "Dr Aparna Ghosh"
  },
  {
    "objectID": "conferences/2023/organising-committee.html#dr-dionne-matthews",
    "href": "conferences/2023/organising-committee.html#dr-dionne-matthews",
    "title": "Organising Committee",
    "section": "Dr Dionne Matthews",
    "text": "Dr Dionne Matthews"
  },
  {
    "objectID": "conferences/2024/index.html",
    "href": "conferences/2024/index.html",
    "title": "Let’s Talk Digital Conference 2024",
    "section": "",
    "text": "Watch this space for further details.\nThe conference is booked for the 24th of October at:\n\nSandford Education Centre Gloucestershire Hospitals NHS Foundation Trust 38 Keynsham Rd Cheltenham GL53 7PX"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Posts",
    "section": "",
    "text": "2023 conference is all done, but more to come\n\n\n\nConference\n\n\n\nAnother successful Let’s Talk Digital Conference\n\n\n\nMark Bailey\n\n\nJul 12, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLet’s talk digital conference 2023 fast approaching\n\n\n\nConference\n\n\n\nConference update\n\n\n\nMark Bailey\n\n\nMay 5, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChatGPT Kubernete\n\n\n\nConference\n\n\n\nLLM gives a great response\n\n\n\nMark Bailey\n\n\nMay 5, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLet’s talk about careers in clinical informatics and white swans\n\n\n\nCareers\n\n\n\nPubs and career advice\n\n\n\nMark Bailey\n\n\nDec 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLet’s talk digital 2023 conference 15th of June\n\n\n\nConference\n\n\n\nConference update\n\n\n\nMark Bailey\n\n\nOct 10, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMsc in health tech underway\n\n\n\nEducation\n\n\n\nEducation\n\n\n\nMark Bailey\n\n\nSep 16, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2nd quarterly meeting 21/10/22 11am\n\n\n\nWebinar\n\n\n\nQuarterly meeting\n\n\n\nMark Bailey\n\n\nSep 5, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSpiritum Duo - Let’s Do Digital pilot\n\n\n\nPilot\n\n\n\nPilot of Spiritum Duo\n\n\n\nMark Bailey\n\n\nJul 21, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLet’s Do Digital - the start of a new beginning\n\n\n\nFuture plans\n\n\n\nFuture plans\n\n\n\nMark Bailey\n\n\nJul 19, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFirst Let’s Do Digital Quarterly meeting - 15/07/2022\n\n\n\nQuarterly meeting\n\n\n\nQuarterly meeting\n\n\n\nMark Bailey\n\n\nJul 15, 2022\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "webinars/ask-a-clinician/index.html",
    "href": "webinars/ask-a-clinician/index.html",
    "title": "Ask a clinician",
    "section": "",
    "text": "Due to run later in 2024"
  },
  {
    "objectID": "posts/2022-12-05-lets-talk-about-careers-in-clinical-informatics-and-white-swans/index.html#lets-talk-about-careers-in-clinical-informatics-and-white-swans",
    "href": "posts/2022-12-05-lets-talk-about-careers-in-clinical-informatics-and-white-swans/index.html#lets-talk-about-careers-in-clinical-informatics-and-white-swans",
    "title": "Let’s talk about careers in clinical informatics and white swans",
    "section": "Let’s Talk About Careers in Clinical Informatics and White Swans",
    "text": "Let’s Talk About Careers in Clinical Informatics and White Swans\nSo I am not one to write blogs about my thoughts, mainly just updates on meetings I am hosting. Today things are different! Let’s talk about careers and swans.\nAs many of you may know, I am a council member of the Faculty of Clinical Informatics (FCI). A fair number of you will know that we had our member’s conference on the 1st of December in London. This was a fantastic meeeting, with lots of great talks about the new FCI strategy, great projects happening across the UK and also a great session about good digital innovation (something close to my heart). It was lovely to meet up with friends and colleagues, and plan for the future ahead.\nNow, the low point for me at the member’s conference was the fact that the closing drinks reception were sponsored by a company named Palantir. I do not want to distract from the title of this blog, but let’s just say that I was not best impressed by the FCI’s decision (which I was not party to) to accept monies from said company. The only reason that I bring it up is that 9 of the conference members (me included) decided that we did not want to put drinks to lips sponsored by a company with a shady history. So what did we do, we had a splinter off party down the local pub, the White Swan.\nNow this is where the story got interesting. So a number of us got talking about the conference, the sponsored drinks and then after a few more pints, career opportunies for junior doctors (I happened to be sitting with doctors). This is where it struck me; the conversations I was having with 3 of the 9 splinter-group-go-pub members reminded me that I was exactly in their position just 12 months ago! 12 months ago I started looking for a new job in digital innovation after getting very little traction with the digital team in my current role. I am not talking about a new role in the more political positions in the NHS, which I feel a lot of people aspire to (rightly or wrongly), but I mean clinicians-who-code positions!\nI’ll come back to the clinicians-who-code remark.\nWhat I realised when I spoke to Anita Phung, Michael Kriger and Alistair Cannon down the White Swan is that it is hard being a passionate, detail-focused clinician that both deeply understands the clinical aspects of a digital build but also has in depth knowledge of how digital really works, how you can programmatically code it, what it can and cannot do and just make things better for frontline staff. The latter remark is what drives me to make digital healthcare great! It is something that I have done now for the last 3 years with different apps I have build for my current respiratory department and it is something I want to continue doing. I am lucky! I have just been offered a job in industry with the forward thinking Sleepstation / Born Digital Health company. I previously referred insomnia patients to them, and now I will be helping them with my knowledge of sleep medicine and digital medicine. However, many junior clinicians do not get this kind of break!\nNow, let’s talk about clinicians-who-code. There is no exact definition for this, and I have had many conversation about improving on the name. What I have settled for is:\n\n\n\n\n\n\nClinician-who-codes\n\n\n\nSomeone that understands, in deepth, the clinical area being studied and the coding language that is needed to provide great digital innovation to said clinical area. One does not need a formal clinical qualification to satisfy the “clinical” part of this name.\n\n\nSo you don’t need to be a doctor, nurse, pharmacist, midwife, etc, etc to be a clinician-who-codes, just someone that has learnt about the clinical area that needs digital improvement and then can apply said improvement using their digital knowledge (from a code upwards approach). My friend and colleague Grant Vallance nicely fits this bill.\nSo anyone can be a clinician-who-codes really, it is just about mindset and learning. I would argue (but of course I would as I am one) that we needs 100s, if not 1000s of clinicians-who-code in the NHS to tackle bad digital implementations, break them down, rebuild them and build anew. We need digital systems that improve patient management, experience and outcomes. We need systems that reduce the workloads and improve the workflows of our fellow staff. There are too many digital systems used across the NHS that just are not fit for purpose. Let’s build from the ground up. Let’s get our junior doctors, nurses, pharmacists, midwives, etc, and those inspiring coders that just want to make things better into postions to do just that, make things better. We need to start having these conversations about how to do things better. We need to have career paths for our junior clinical informaticians that are not just aimed at high level managerial NHS digital roles. We need to use the passion that is so evident in these young people, provide them with jobs and just allow them to improve things for everyone. The ways we have been doing things so far in the NHS has had very variable results. It is time to let the new blood show us the way, we just need to give them the career paths to do so!"
  },
  {
    "objectID": "posts/2022-12-05-lets-talk-about-careers-in-clinical-informatics-and-white-swans/index.html#so-lets-do-digital-right.-lets-get-clinicians-who-code-working",
    "href": "posts/2022-12-05-lets-talk-about-careers-in-clinical-informatics-and-white-swans/index.html#so-lets-do-digital-right.-lets-get-clinicians-who-code-working",
    "title": "Let’s talk about careers in clinical informatics and white swans",
    "section": "So Let’s Do Digital right. Let’s get Clinicians-who-code working!",
    "text": "So Let’s Do Digital right. Let’s get Clinicians-who-code working!\nP.S. Perhaps the code name for creating great career opportunies for clinicians-who-code should be called “White Swan”?\nShout out to Ron Lach for this blog’s thumbnail (https://www.pexels.com/photo/homeless-man-holding-cardboard-in-hands-9830110/)"
  },
  {
    "objectID": "posts/2023-03-31-chatgpt-kubernete/index.html",
    "href": "posts/2023-03-31-chatgpt-kubernete/index.html",
    "title": "ChatGPT Kubernete",
    "section": "",
    "text": "I have been recently looking into using Kubernetes for a new project I am working on. After a few hours of research, I was trying to find an analogue in the real physical world that minors Kubernetes. I thought large DIY stores seem to fit the bill. Then I thought I would ask ChatGPT what it thought of this concept. It seemed to be right on the mark.\nQuestion\nExplain kubernetes but in the form of a large diy store franchise\nResult\nSure, I can try to explain Kubernetes using a large DIY store franchise as an analogy!\nImagine that you are the owner of a large DIY store franchise. Your business is booming and you have a lot of customers coming in every day, each with their own unique projects and needs. You want to make sure that you have enough inventory, staff, and resources to keep up with demand, while also making sure that everything runs smoothly and efficiently.\nEnter Kubernetes.\nKubernetes is like your store’s management system. It helps you manage all the different parts of your business – from inventory and staffing to customer service and marketing. It’s like having a team of expert managers who can keep everything running smoothly and handle any issues that arise.\nIn Kubernetes, you have “nodes” that are like the physical locations of your stores. These nodes can be in different regions, just like your stores can be in different cities or countries. Each node has its own set of resources, just like each store has its own inventory and staff.\nThen you have “pods,” which are like the different departments in your stores. For example, you might have a plumbing department, an electrical department, and a garden center. Each pod has a specific function and set of resources, just like each department has its own inventory and staff.\nKubernetes helps you manage all these different pods and nodes, making sure that they are all working together efficiently. If one pod is getting overwhelmed with customers, Kubernetes can automatically shift resources to that pod to help it handle the load. If a node goes down, Kubernetes can redirect traffic to another node to make sure that customers can still access your store.\nOverall, Kubernetes is like the ultimate DIY store management tool. It helps you keep everything organized, efficient, and running smoothly, even as your business grows and changes over time."
  },
  {
    "objectID": "posts/2022-07-21-spiritum-duo-lets-do-digital-pilot/index.html",
    "href": "posts/2022-07-21-spiritum-duo-lets-do-digital-pilot/index.html",
    "title": "Spiritum Duo - Let’s Do Digital pilot",
    "section": "",
    "text": "A small team of us have been working on a prototype for a new digital pathway. We are focusing on lung cancer to start with but the design is open source and modular so that other disease sites can benefit from this work. See more at SpiritumDuo.com."
  },
  {
    "objectID": "posts/2022-07-19-lets-do-digital-the-start-of-a-new-beginning/index.html",
    "href": "posts/2022-07-19-lets-do-digital-the-start-of-a-new-beginning/index.html",
    "title": "Let’s Do Digital - the start of a new beginning",
    "section": "",
    "text": "Following on from the inaugural Let’s Do Digital Conference on the 18th of March 2022, we have now had our first Let’s Do Digital Quarterly meeting on the 15th of June 2022. This had a great turn out, show casing of exciting digital innovation in the South West and great discussion. Once of the topics that arose from both the Quarterly meeting and the digital Summer School that I joined over that week is the issue of digital innovation happening in silos and people not hearing about what is going on around the country, how they can collaborate and how they can benefit from the works from others. Hence, during the quarterly meeting I raised the idea about a means to share these digital innovations with others. This would also be a place for people to submit their ideas and for a team of software engineers (hopefully hired directly within the NHS) to build and then also share their learnings and digital solutions. In some ways this is a new digital movement of frontline staff sharing far and wide, paying forwards their homegrown digital solutions, which will benefit all within the NHS. I am formulating the idea of a sharing platform."
  },
  {
    "objectID": "posts/2023-05-05-lets-talk-digital-conference-2023-fast-approaching/index.html",
    "href": "posts/2023-05-05-lets-talk-digital-conference-2023-fast-approaching/index.html",
    "title": "Let’s talk digital conference 2023 fast approaching",
    "section": "",
    "text": "15th of June. Put it in your diaries. Better yet, register for the event at eventBrite.\nGreat speakers, get guests and great collaboration.\nConfirmed speakers include:\n\nMatimba Swama – Swarm technology, University of Bristol\nProf Joe McDonald – Clinical Informatics overview, MD of several med tech companies and guru CCIO\nSophie Brooks – eHandover sheet – NHS Midwife, NHS Clinical Entrepreneur and CCOO of Lister\nKevin Monk – AI for clinical rota management, CEO SARDJV\nGrant Vallance – Information Manager, Oxford University Hospital NHS Foundation Trust – Haematological Homegrown digital solutions\nMark Wardle – neurologist and CCIO at Cardiff Hospital and clinician-who-code\nMarcus Baw – locum GP, ED doctor and clinician-who-codes\nHarold Thimbleby – Professor of Computer Sciences, author of Fix IT\nDr Majid Kazmi – Digital Cancer care – Careology\nDom Main and Anita Chung – automation in primary care, both GPs\nAndrea Preston – patient cancer management apps\nMark Bailey – Interim Chair of Council, Faculty of Clinical Informatics, Locum respiratory, sleep and digital doctor, QVHNFT\n\nAgenda and speaker bios soon to follow.\nJoin us in person or online.\nCall for poster abstracts\nIf you would like us to host your poster at the conference, please submit a 250 word abstract to letsdodigitalci@gmail.com. Closing date is the 5th of June. We are looking for abstracts around exciting projects that you or your group have worked on, are currently working on or even potential future exciting projects around “health care digital innovation at the frontline”.\nMany thanks for our two sponsors, Gloucestershire University and SWAG Cancer Alliance"
  },
  {
    "objectID": "learn/index.html",
    "href": "learn/index.html",
    "title": "Education",
    "section": "",
    "text": "Available educational resources include:"
  },
  {
    "objectID": "learn/syllabi/clinician-who-codes.html",
    "href": "learn/syllabi/clinician-who-codes.html",
    "title": "Clinician-who-codes",
    "section": "",
    "text": "By Mark Bailey"
  },
  {
    "objectID": "learn/syllabi/clinician-who-codes.html#the-reasoning-behind-it-all",
    "href": "learn/syllabi/clinician-who-codes.html#the-reasoning-behind-it-all",
    "title": "Clinician-who-codes",
    "section": "The reasoning behind it all",
    "text": "The reasoning behind it all\nAs far as I know, there is no course currently out in how to become a Clinicain-who-codes (CWC). This saddens me.\nI have pretty much defined myself as a CWC since I discovered digital health in 2018. It was back then that I started building different apps to speed up mine and colleagues clinical and admin workflows. I even got some robotic process automation in there.\nI would have given my left arm to study a Clinician-who-code course. Today, I am left with the feeling that a CWC course still needs to exist. I fully appreciate that no everyone needs to have in depth knowledge of both clinical and digital (aka coding) aspects of digital healthcare to be able to work in this domain. However, I see a lot of benefits of having a CWC on your digital healthcare team:\n\nA broad understanding of the intricacies of how computers work and how they can complement, rather than hinder, clinicians and their workflows.\nServe as a translator between digital and clinical teams.\nWhy not have the end-user on your team to tell you what is and what is not going to work!"
  },
  {
    "objectID": "learn/syllabi/clinician-who-codes.html#so-what-would-you-need-to-learn",
    "href": "learn/syllabi/clinician-who-codes.html#so-what-would-you-need-to-learn",
    "title": "Clinician-who-codes",
    "section": "So what would you need to learn?",
    "text": "So what would you need to learn?\n\nClinical speciality (pharmacist, midwife, nurse, doctor, paramedic, etc).\nClinical informatics (see separate syllabus here).\nCoding skills."
  },
  {
    "objectID": "posts/2022-07-15-first-lets-do-digital-quarterly-meeting-15-07-2022/index.html",
    "href": "posts/2022-07-15-first-lets-do-digital-quarterly-meeting-15-07-2022/index.html",
    "title": "First Let’s Do Digital Quarterly meeting - 15/07/2022",
    "section": "",
    "text": "We had our very first Let’s Do Digital Quarterly meeting. This was an idea I had from a colleague of mine from the University of Gloucestershire. This was a great meeting, talking about the future of digital innovation at the frontline, showcased a few ongoing projects in quick fire 3 min sessions and opened to the floor and discussed the issues around innovation at the frontline in the NHS. The recording from the session can be found at the below link:\nLet’s Do Digital Quarterly recording"
  },
  {
    "objectID": "posts/2022-09-16-msc-in-health-tech-underway/index.html",
    "href": "posts/2022-09-16-msc-in-health-tech-underway/index.html",
    "title": "Msc in health tech underway",
    "section": "",
    "text": "I have just had a fantastic meeting with my colleagues at Gloucestershire University. We have been lucky enough to have 5 new MSc students join the University to study by research the new health tech course. This is very exciting news, and I look forward to hearing about their work soon. Interesting areas they will cover include:\n\nGamification for helping patients with mental health issues\nTable top games for mental health and social interactions\nRadiology\nHealth care network security\nUsing technology to help manage dyslexia in complicated health procedures\n\nI look forward to talking more with the students and for people to hear more about their amazing work. I hope to get some, if not all, of the students to the next Let’s Do Digital quarterly meeting in Feb/March 2023.\nWant to get involved, find out more about the MSc in Health Tech or even apply for the MSc, please contact Thiago Viana at tviana1@glos.ac.uk.\nUpdate 05/05/2024: Thiago Viana no longer works at Gloucestershire University."
  },
  {
    "objectID": "posts/2022-10-10-lets-talk-digital-2023-conference-15th-of-june/index.html",
    "href": "posts/2022-10-10-lets-talk-digital-2023-conference-15th-of-june/index.html",
    "title": "Let’s talk digital 2023 conference 15th of June",
    "section": "",
    "text": "The most recent inaugural Let’s Talk Digital Conference in March this year was a great success. We are now planning the next conference. This was originally going to be Thursday the 18th of May, but due to room booking issues, we have had to move the date. The 2023 conference will now be on:\nThursday 15th of June, 2023\nWe will keep you up to date on the programm!\nImage by SNCR GROUP from Pixabay"
  },
  {
    "objectID": "posts/2022-09-05-2nd-quarterly-meeting-21-10-22-11am/index.html",
    "href": "posts/2022-09-05-2nd-quarterly-meeting-21-10-22-11am/index.html",
    "title": "2nd quarterly meeting 21/10/22 11am",
    "section": "",
    "text": "Confirmed line up for 21/10/22\n\nChair: Adam Dangoor, CCIO BRI\nJo Chambers, SWAG patient representative – Doing Digital – A Patient and Engineering Perspective\nPaul Atkinson, Gloucestershire ICS CCIO – The New Gloucestershire ICS Digital Strategy\nTracie Miles, Associate Director of Nursing and Midwifery, NHS South West Genomic Medicine Service Alliance – Breast Cancer Genes and Me – A Digital Patient Empowerment Project\n\nTickets at EventBrite"
  },
  {
    "objectID": "posts/2023-07-12-2023-conference-is-all-done-but-more-to-come/index.html",
    "href": "posts/2023-07-12-2023-conference-is-all-done-but-more-to-come/index.html",
    "title": "2023 conference is all done, but more to come",
    "section": "",
    "text": "The conference was a great success. Lots of great content. See the conference page for more."
  },
  {
    "objectID": "who-are-we.html",
    "href": "who-are-we.html",
    "title": "Who we are",
    "section": "",
    "text": "A collection of people passionate about making better digital health care and education a reality.\nMark Bailey is the main curator of the Let’s Do Digital Website.\nDylan Goh was the main curator for the 2023 Conference pages.\nWe will publish a full list of names shortly"
  },
  {
    "objectID": "webinars/quarterly/index.html#october-2022",
    "href": "webinars/quarterly/index.html#october-2022",
    "title": "Quarterly meetings",
    "section": "October 2022",
    "text": "October 2022"
  },
  {
    "objectID": "conferences/2022/index.html",
    "href": "conferences/2022/index.html",
    "title": "Let’s Talk Digital Conference 2022",
    "section": "",
    "text": "You can find information about the first Let’s Talk Digital Conference on the main sponsor’s website SWAG.\n\nWant to jump straight in and watch the recordings of the 2022 conference, view below:"
  },
  {
    "objectID": "conferences/2023/index.html",
    "href": "conferences/2023/index.html",
    "title": "Let’s Talk Digital Conference 2023",
    "section": "",
    "text": "2023 Conference\n    Agenda\n    Bios\n    Posters\n    Maps\n    Organising Committee\n\n\nThank you for taking an interest in the Let’s Talk Digital Conference 2023. It the conference is all over, but there is always more to come.\nWatch the conference in full, snippets, or as you like below:\n\nMany thanks for our sponsors:"
  },
  {
    "objectID": "conferences/2023/bios.html",
    "href": "conferences/2023/bios.html",
    "title": "Bios 2023",
    "section": "",
    "text": "2023 Conference\n    Agenda\n    Bios\n    Posters\n    Maps\n    Organising Committee\n\n\n\n\n\n\n\nFull Name – Mark Bailey\nJob Title(s) – Consultant in Respiratory Medicine and Clinician-who-codes, Conference co-producer\nTitle of presentation - Mark has been very interested in all things digital for most of his life. His digital interests filtered into his current healthcare role when he started thinking of ways to streamline daily clinical tasks. He built a desktop app called “Spiritum”. This houses the Gloucestershire sleep, bronchiectasis and tuberculosis services. It automates the transfer of data within the trust, creating standardised clinical letters, retrieves lab and radiology reports, flagging abnormal ones for clinicians to review, etc. As part of works to improve the sleep service, the Spiritum app helped reduce the breach rate of this service by 79% over a 2-year period. A spin-off from the Spiritum app was an program called “Quick Spiritum”. This uses robotic process automation to automate and speed up routine clinical tasks. These tasks include looking up imaging (eg chest X-rays), bloods and clinical letter and requesting tests and referrals. Quick Spiritum was found to save, on average, 30% of clinician’s time on these tasks. This work has shown what is possible with automation and digitisation, and Mark’s department is keen to tackle the next big issues. Mark and his team have been working over the last one and a half years on improving the local lung cancer pathway using the knowledge gained from the above projects. Mark has two computer science placement students working with him on this project – Joe Channing and Nick Ives. Mark’s team now have a functional “proof-of-concept” app that will be showcased at the Let’s Talk Digital Conference. This app has been created in open source and in a modular fashion. By using open source and a modular build, the hope is to be able to allow other disease sites and trusts to both benefit and collaborate on this work.\nMark is also a big advocate of advancing the clinical informatics speciality. He is a board member of the Faculty of Clinical Informatics, a board member of the NHS pycom (python community) and a current student on the NHS Digital Academy PGDip Digital Academy course. He hopes to progress this to an MSc in September.\n\n\n\n\n\n\n\n\nFull name – Marcus Baw\nJob Title(s) – Clinical Informatician, Software Developer, GP, Director at Baw Medical Ltd\nTitle of presentation – Debate: “This house believes that clinicians should be allowed to directly code and create health apps” For – Marcus Baw, Clinical Informatician, Software Developer, and other roles Against – Harold Thimbleby, Professor of Computer Science, Swansea University\nDr Marcus Baw is a practicing GP and Emergency Physician in Yorkshire, UK, with a specialist interest in health informatics and health technology. He is a software developer and works exclusively on open source projects. He is also the Immediate Past Chair of the Royal College of GPs Health Informatics Group.\n\n\n\n\n\n\n\n\nFull Name – Sophie Brook\nJob Title(s) – member of the National Digital Shared Decision-Making Council with NHSE, member of the LND local council, MSc student in Digital Health at UCL\nTitle of Presentation – Sophie is an NHS Clinician who created Lister due to experiencing frustrations from paper handover lists that still saturate the NHS regardless of digital transformation. She felt the cognitive overload of trying to remember and prioritise all patients within her care and the patient safety concerns of missed or overlooked tasks. This was coupled with the lack of transparency between tasks and staff members, with various roles working from different lists, leading to delays and inefficient ways of working. Motivated to solve these problems, Sophie was accepted onto the NHS Clinical Entrepreneur programme in 2019 with the Idea of digitising this process to improve patient safety, teamwork and workflow. Fast forward to 2023, Lister is now a developed task management solution and is currently being evaluated with 4 NHS Trusts.\nSophie’s passion for digital innovation has evolved over the years and she is a member of the National Digital Shared Decision-Making Council with NHSE, a member of the LND local council and a UCL MSc student in Digital Health. She looks forward to sharing her journey from NHS Clinician turned digital Innovator at the let’s Talk Digital Conference 2023.\n\n\n\n\n\n\n\n\nFull Name – Mr Kareem El-Wakeel\nJob title(s) – Senior Programmer, Collaboration Digital Ltd\nTitle of presentation – An innovative way to streamline multidisciplinary team meetings, safely, efficiently, and digitally.\nAfter graduating from Bristol university with a Masters in Aeronautical Engineering, Kareem decided to pursue his passion in software development and programming. As a software engineer, he applied his skills working in different industries, testing software, developing transport and journey planning apps, and medical software, building experience in web and app development as well as backend systems. Kareem is currently our chief programming officer.\n\n\n\n\n\n\n\n\nFull name – Majid Kazmi\nJob title(s) – Director of Innovation for Cancer and Surgery and Deputy Medical Director, Guy’s and St Thomas’ NHS Foundation Trust\nTitle of presentation – Digital cancer care: how to empower patients beyond the hospital walls\nMajid Kazmi, B.Med.Biol, MD ChB (comm), FRCP, FRCPath, has a national profile in myeloma and bone marrow (stem cell) transplantation as well as clinical leadership in cancer. Majid is the UK lead for the EBMT (European group for Blood and Marrow Transplantation) for auto-immune disorders and has performed the largest number of these transplants in the UK. He has been involved in writing the UK myeloma and amyloidosis guidelines and is an invited speaker nationally and internationally.\n\n\n\n\n\n\n\n\nFull name – Paul Landau\nJob title(s) – CEO and Founder, Careology\nTitle of presentation – Digital cancer care: how to empower patients beyond the hospital walls\nPaul Landau is the CEO and Founder of Careology, the leading digital cancer care platform. Careology’s award-winning app enables patients to navigate their cancer journey and connect them with their clinicians and community. Paul is a pioneer in the technology space – launching Fitbug in 2005, making it a highly influential player in the global wearables market. Following his wife’s cancer diagnosis he leveraged his consumer health-tech experience to change how cancer-care is delivered. Careology launched in 2019, empowering Patients and Healthcare professionals to be more in control, make decisions based on clinical rigour and help ease pressure in the system.\n\n\n\n\n\n\n\n\nFull Name – Dom Main\nJob Title(s) – GP and Clinical Engineer at Healthtech-1\nTitle of presentation – Robotic Process Automation in Primary Care\nPracticing GP who came to medicine after a few years studying Physics, passionate about improving the lives of healthcare workers and patients through technology.\n\n\n\n\n\n\n\n\nFull Name – Professor Joe McDonald\nJob Title(s) – Medical Director at SARD JV, Sleepstation, Parsek Solutions, Ethical Healthcare\nTitle of presentation – 10 Lessons from 20 Years in Health IT\nJoe is a consultant psychiatrist by background and sytemic family therapist. A former NHS trust Medical Director, he oversaw the digitisation of mental health records during NPfIT as national clinical lead for IT and former Medical Director of the Lorenzo Delivery Team. Joe was “let go” by NPfIT for his “career-limiting frankness”. Founding director of The Great North Care Record and longstanding crusader in the field of NHS IT usability, carried out 4 National UX surveys over 10 years. Now working as a peripatetic CCIO/MD for SME’s trying to do right by his beloved NHS.\n\n\n\n\n\n\n\n\nFull Name – Kevin Monk\nJob Title(s) – CEO of SARD JV, General Tinkerer.\nTitle of presentation – AI Beyond The Hype – a real live demo of useful things AI can do for the NHS and patients.\nKevin cofounded SARD JV with Oxleas NHS FT. He’s been hacking software together since he was 8 years old. For the last 15 years, he’s built workforce systems for the NHS in rostering, appraisal, eLeave, and capacity and demand management. SARD is taking this all to a new level thanks to AI. In this talk, we’ll get a glimpse of our inevitable future – away from the AI hype and a real-life demo of what it can actually do that’s useful. Very useful.\n\n\n\n\n\n\n\n\nFull name – Anita Phung\nJob title(s) – General Practitioner, Metabolic Health Doctor, Health Optimisation Clinician\nTitle of presentation – Robotic Process Automation in Primary Care\nAnita is a recently qualified GP with a strong interest in health optimisation and digital health. She worked for an early-stage health tech start up for 2 years before taking a career break to walk Camino de Santiago (500 miles!). Anita is currently involved in various digital health-related projects whilst considering her role in the digital health space.\n\n\n\n\n\n\n\n\nFull Name – Andrea Preston\nJob Title(s) – Andrea Preston (MRPharmS Consultant), Head of Patient Innovation and Care at Sanius Health | Myeloma Specialist Pharmacist.\nTitle of Presentation – Andrea is a haematology specialist pharmacist with over 20 years’ experience in the NHS. After co-creating an app to support patients with Chronic Myeloid Leukaemia she joined Sanius Health, an award-winning, AI powered patient generated data platform with a focus on accelerating personalised medicine, drug discovery, and clinical research for cancer treatment, haematological malignancies, haematological disorders and rare diseases.\nAndrea is Chair of the UK Myeloma Society Pharmacist Group and plays an active prescribing role for patients with multiple myeloma and amyloid.\nAndrea is passionate about research and innovation for patient benefit. She has been an NHS Clinical Entrepreneur with NHS England and NHS Improvement’s Innovation, Research and Life Sciences group and is a member of the British Oncology Pharmacy Association’s Audit & Research Committee. Her areas of research interest include medication adherence, dosing in obesity and the use of innovative technologies to drive better outcomes for patients.\n\n\n\n\n\n\n\n\nFull Name – Mr Rajesh Sivaprakasam\nJob Title(s) – Robotic Renal Failure Surgeon, Lead for Robotic renal failure Surgery, Research and Education at Barts health NHS Trust\nTitle of presentation – Are we ready for digital Healthcare?\nMr.Rajesh Sivaprakasam is a Robotic Renal Failure Surgeon, Lead for Robotic renal failure Surgery, Research and Education at Bartshealth NHS Trust. He completed training in abdominal organ transplatation in Addenbrooke’s Hospital Cambridge and conducted research in cellular Biology at University of Cambridge. As a surgeon-scientist, he leads NIHR funded clincial trials and is the chair of Multispeciality Robotic research programme in Barts health NHS Trust. His research work is presented in many international conferences, published in peer-reviewed journals and developed the world’s first risk score to predict outcome following intestinal transplantation. He is engaged with many national patient organisations to improve their engagement towards adopting digital solutions and uses multimedia to demystify the potential solutions used presently and considered for the future. He performed the first live renal transplantation in TV (BATFA winner) and is a member of All Party Parlimentary Group to improve engagement of BAME communities to organ donation and transplantation. He is passionate about enhancing patient care and medical education using digital innovation-based solutions and work with many innovators at various stages of the development of their solutions across the globe. He is an experienced Medical entrepreneur and actively participates in enhancing a patient-clinician-provider & industry partnered approach to develop and integrate digital solutions into practice. He regularly participates in MedTech events and strives to encourage educational & healthcare organisations to improve engagement of their students and teams toward digial health, thereby, shape the future of our healthcare service.\n\n\n\n\n\n\n\n\nFull name – Matimba Swana\nJob Title(s) – PhD candidate\nTitle of Presentation – Future Nanomedicines: Building a regulatory framework for the first-in-human nanoswarm cancer clinical trial\nMatimba is a PhD candidate in the Department of Engineering Mathematics at University of Bristol. Matimba’s research investigates cancer nanomedicine, swarm medicine, bioethics and the use of virtual tumours and patient twin models in clinical trials. Matimba is currently doing a placement on the Futures team in the UK Government Office for Science. Matimba is passionate about emerging technologies, medical ethics, global health and digital health disparities. Matimba currently sits on the Bristol cancer steering committee and is a trustee on the Executive Board at the Brain Tumour Charity. Matimba previously worked in stem cell research and clinical trials with a focus on decentralised phase II and III rare disease trials and digital healthcare.\n\n\n\n\n\n\n\n\nFull name – Prof Harold Thimbleby\nJob Title(s) – See Change Fellow in Digital Health\nTitle of Presentation – 1) Debate: “This house believes that clinicians should be allowed to directly code and create health apps” For – Marcus Baw, Clinical Informatician, Software Developer, and other roles Against – Harold Thimbleby, Professor of Computer Science, Swansea University\n\nShort talk: “First do no harm? First fix digital”\n\nHarold Thimbleby is an internationally recognised computer scientist and popular speaker who campaigns for improving digital healthcare. Harold’s book Fix IT: See and solve the problems of digital healthcare (OUP) won the British Medical Association best book awards in General Medicine; the BMA judges wrote “It is such an important book. Our ability to help patients is so reliant on IT and digital solutions. It has the broadest appeal and has achieved something quite impressive … It should be read by all healthcare staff.”\nAs an expert witness in NHS cases, Harold has helped keep healthcare professionals out of prison; he has also provided expert evidence in other cases, such as the UK Post Office scandal which prosecuted over 700 people for alleged fraud that was in fact caused by computer bugs. He recently finished a project with Welsh Ambulance helping them make best use of AI systems.\n\n\n\n\n\n\n\n\nFull Name – Grant D. Vallance\nJob Title(s) – Information Manager for the Department of Clinical Haematology, Oxford University Hospitals Foundation NHS Trust\nTitle of Presentation – Clinical Services Providing Clinical Software\nGrant originally comes from New Zealand but calls the U.K. home after being here for over 20 years. He has degrees in biochemistry, bioethics, ethics and the philosophy of science. He has worked in clinical trial administration and has done and still does academic teaching at the University of Oxford in ethics (mainly research ethics) and clinical trial protocol development. A self-confessed long-term computer nerd. His first computer was a ZX Spectrum 16k, which dates him somewhat. Perhaps being a computer nerd is the reason why, after a circuitous path, he has come to work in information management in a clinical department that looks after sick patients and not IT/informatics systems. He is a passionate believer in the view that the NHS should embrace and encourage frontline digital innovation where it occurs and particularly from within clinical departments. He has been fighting tooth and nail to do so and the struggle is the reason for his greying beard. Unfortunately, how the NHS and NHS Trusts do digital innovation is generally not very conducive to supporting frontline digital innovation. Consequently, he has some rather firm views on how this can be remedied…\n\n\n\n\n\n\n\n\nFull Name – Dr Mark Wardle\nJob Title(s) – Consultant Neurologist and Chief Clinical Information Officer.\nTitle of Presentation – 10 lessons from a journey through health and care data\nMark Wardle is a consultant neurologist and CCIO with a mission to build higher quality and safer healthcare services through open standards, interoperability and the use of meaningful data captured as a consequence of the processes of care. The 10 lessons are drawn from his experience developing clinical applications that are in active use within the NHS and worldwide, chairing the Welsh Technical Standards Board (WTSB), international consultancy work and continued academic involvement in the use of real-life data and outcomes. https://www.wardle.org and https://github.com/wardle"
  },
  {
    "objectID": "conferences/2023/maps.html",
    "href": "conferences/2023/maps.html",
    "title": "Maps 2023",
    "section": "",
    "text": "2023 Conference\n    Agenda\n    Bios\n    Posters\n    Maps\n    Organising Committee\n\n\nFor those of you attending in person, the venue is at the Park Campus in Cheltenham.\nAddress:\n\nElwes Teaching Centre (1a on the 2nd map below) Park Campus University of Gloucestershire Cheltenham GL50 2RH\n\nPaid for parking is available on the campus. Alternatively there is free parking on the roads off from the campus.\n\n\nThe conference will be held in the Elwes Teaching Centre (1a on the map):\nIf you are struggling to find the building, please click here for directions.\n\nFor those of you attending virtually, a virtual invite will be sent out shortly by email."
  },
  {
    "objectID": "learn/syllabi/clinical-informatician.html",
    "href": "learn/syllabi/clinical-informatician.html",
    "title": "Clinical informatician",
    "section": "",
    "text": "This is currently being worked on with fellow Clinicains who code.\nWatch this space."
  },
  {
    "objectID": "webinars/index.html",
    "href": "webinars/index.html",
    "title": "Webinars",
    "section": "",
    "text": "Currently, we have recordings from the 2022 Quarterly Let’s Do Digital Webinars."
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html",
    "href": "modules/module-1/slides/3-python-basics.html",
    "title": "Python basics",
    "section": "",
    "text": "At its core, a computer is essentially a device that answers yes-no questions.\nIt answers these simple questions very very quickly.\nBy asking the computer millions of these yes-no questions, it can calculate answers to very complex questions."
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#what-are-computers",
    "href": "modules/module-1/slides/3-python-basics.html#what-are-computers",
    "title": "Python basics",
    "section": "",
    "text": "At its core, a computer is essentially a device that answers yes-no questions.\nIt answers these simple questions very very quickly.\nBy asking the computer millions of these yes-no questions, it can calculate answers to very complex questions."
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#how-do-computers-think",
    "href": "modules/module-1/slides/3-python-basics.html#how-do-computers-think",
    "title": "Python basics",
    "section": "How do computers think?",
    "text": "How do computers think?\n\nConfused by the last statement? Let me expand…\nComputers have lots of components to enable them to work.\n\nScreen to show you its output.\nKeyboard and mouse to allow you to communicate with the computer.\nInside the computer’s chassis:\n\nHard drives\nMemory sticks\nFans\nPower supplies\nMotherboards\nProcessors\n\n\nThe processor of a computer is where all of the thinking takes place."
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#how-do-computers-think-1",
    "href": "modules/module-1/slides/3-python-basics.html#how-do-computers-think-1",
    "title": "Python basics",
    "section": "How do computers think?",
    "text": "How do computers think?\n\nThe processor is where these yes-no questions are undertaken.\nThe processor receives instructions in binary form.\nBinary is basically a string of 1s and 0s (eg 01001011).\nAs modern computers communicate in binary (yes-no) form, they are said to be digital.\nThe processor reads these binary instructions.\nEach instruction results in either a True or False answer (aka yes-no answer). The output (aka answer) is also in binary."
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#so-how-do-we-communicate-with-computers",
    "href": "modules/module-1/slides/3-python-basics.html#so-how-do-we-communicate-with-computers",
    "title": "Python basics",
    "section": "So how do we communicate with computers?",
    "text": "So how do we communicate with computers?\n\nSo computers listen, think and talk in binary.\nWe need a method to communicate with them, enabling us to get them to do what we want them to do.\nThis is where programming languages come into play."
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#programming-languages",
    "href": "modules/module-1/slides/3-python-basics.html#programming-languages",
    "title": "Python basics",
    "section": "Programming languages",
    "text": "Programming languages\n\nThere are over 9000 programming languages, but much less than this in routine use.\nA programming language is written in somewhat of a human readable form (depends on the langauge).\nPopular langauges include:\n\nJavascript / typescript\nC++\nGo\nJava\nSwift\nR\nPython"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#translation",
    "href": "modules/module-1/slides/3-python-basics.html#translation",
    "title": "Python basics",
    "section": "Translation",
    "text": "Translation\n\nWhen you have written your code in your favourite programming language, a software program (called the interpreter or compiler) reads your code and translates it into 1s and 0s which the computer can then read and act upon."
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#we-will-be-learning-python",
    "href": "modules/module-1/slides/3-python-basics.html#we-will-be-learning-python",
    "title": "Python basics",
    "section": "We will be learning python",
    "text": "We will be learning python"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#the-python-programming-language",
    "href": "modules/module-1/slides/3-python-basics.html#the-python-programming-language",
    "title": "Python basics",
    "section": "The Python programming language",
    "text": "The Python programming language\n\nPython is a scripting language interpreted and compiled at runtime.\nIts syntax emphasises readability and simplicity, utilising indentation for code structuring.\nPython supports various programming paradigms, including procedural, object-oriented, and functional.\nWith a vast standard library and active community support, Python is widely used for web development, data analysis, AI, and automation."
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#what-is-in-a-code",
    "href": "modules/module-1/slides/3-python-basics.html#what-is-in-a-code",
    "title": "Python basics",
    "section": "What is in a code?",
    "text": "What is in a code?\n\nYou need different elements in your code to be able to tell the computer what to do. These include:\n\nVariables\nOperators\nExpressions\nFlow control\nFunctions\nError handling\nMore advanced functionalities"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#variables",
    "href": "modules/module-1/slides/3-python-basics.html#variables",
    "title": "Python basics",
    "section": "Variables",
    "text": "Variables\n\nA single variable is a contained space in the computer’s memory.\nSimple in-built variables include:\n\n\n\nvariables_simple.py\n\na_string = \"I am a string\"\nan_integer = 11\na_float = 8.04\na_boolean = True"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#variables-1",
    "href": "modules/module-1/slides/3-python-basics.html#variables-1",
    "title": "Python basics",
    "section": "Variables",
    "text": "Variables\n\nMore complex variables include:\n\n\n\nvariables_more_complex.py\n\na_list = [\"first element of list\", \"second element of list\"]\nanother_list = [1, 5, 3, 6]\na_dictionary = {\n    \"1st key\": \"1st value\",\n    \"2nd key\": \"2nd value\",\n}\na_tuple = (1, 2, 3, 4, 6, 7)\na_set = {4, 2, 5, 3}"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#spaces",
    "href": "modules/module-1/slides/3-python-basics.html#spaces",
    "title": "Python basics",
    "section": "Spaces",
    "text": "Spaces\n\nVariables names cannot have spaces, if you add a space, the computer will read this as two separate variables:\n\n\n\nspaces.py\n\nvariable_a = \"I am a variable\"\nvariable b = \"The added space will cause an error\"\n\nSyntax error:\n    Cell In[1], line 2\n        variable b = \"The added space will cause an error\"\n                 ^\n    SyntaxError: invalid syntax"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#double-or-single-quotation-marks",
    "href": "modules/module-1/slides/3-python-basics.html#double-or-single-quotation-marks",
    "title": "Python basics",
    "section": "Double or single quotation marks?",
    "text": "Double or single quotation marks?\n\nYou will see people using ‘single’ and also “double” quotation marks. It does not matter which you chose, but be consistent. If you accidently mix pairs of quotation marks you will get strange errors.\n\n\n\nquotation_marks.py\n\nvariable_a = \"All good here with two single qoutation marks\"\nvariable_b = \"I have the wrong matching qoutation marks'\nvariable_c = 'Single quotation marks'\n\n\nSuddenly variable_c is part of the string for variable_b"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#using-both-types-of-quotation-marks",
    "href": "modules/module-1/slides/3-python-basics.html#using-both-types-of-quotation-marks",
    "title": "Python basics",
    "section": "Using both types of quotation marks",
    "text": "Using both types of quotation marks\n\nYou can embed quotation marks within each other\n\n\n\nquotation_marks.py\n\nvariable_a = \"I want to highlight 'this' word\"\nvariable_b = 'I would like to show you \"this\"'"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#f-strings",
    "href": "modules/module-1/slides/3-python-basics.html#f-strings",
    "title": "Python basics",
    "section": "f-strings",
    "text": "f-strings\n\nUseful to know\n\n\n\nf_string.py\n\nage = 25\nprint(f\"The patient's age is : { age }\")"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#indentation",
    "href": "modules/module-1/slides/3-python-basics.html#indentation",
    "title": "Python basics",
    "section": "Indentation",
    "text": "Indentation\n\nPython is extremely sensitive to indentation. One extra space or tab in front of a line of code (an expression) and you will not hear the end of it in terms of errors or strange results. Indentation (in the form of tabs) of expressions shows the computer which previous expression it relates to."
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#indentation-1",
    "href": "modules/module-1/slides/3-python-basics.html#indentation-1",
    "title": "Python basics",
    "section": "Indentation",
    "text": "Indentation\n\n\nindentation.py\n\nif drug_prescribed == True:\n    if drug_given == True:\n        record_drug_given = True\n        print(\"Drug has been prescribed and given to the patient\")\n    else:\n        print(\"Drug has been prescribed but not given\")\nelse:\n    print(\"Drug has not been prescribed\")\n\nprint(\"Drug round complete!\")\n\nOutput (if drug has been prescribed and given)\n    Drug has been prescribed and given to the patient\n    Drug round complete!"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#indentation-2",
    "href": "modules/module-1/slides/3-python-basics.html#indentation-2",
    "title": "Python basics",
    "section": "Indentation",
    "text": "Indentation\n\n\nindentation.py\n\nif drug_prescribed == True:\n    if drug_given == True:\n        record_drug_given = True\n        print(\"Drug has been prescribed and given to the patient\")\n    else:\n        print(\"Drug has been prescribed but not given\")\nelse:\n    print(\"Drug has not been prescribed\")\n\n    print(\"Drug round complete!\")\n\nOutput (if drug has been prescribed and given)\n    Drug has been prescribed and given to the patient"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#naming-conventions",
    "href": "modules/module-1/slides/3-python-basics.html#naming-conventions",
    "title": "Python basics",
    "section": "Naming conventions",
    "text": "Naming conventions\n\nThere are several naming conventions for programming languages. In python, conventions are:\n\nVariables, functions and methods\n\nsnake_case\n\nConstants\n\nCONSTANT_CASE\n\nClasses (a higher organisation method in python)\n\nCamelCase\n\nModules (a file with python code inside)\n\nsnake_case\n\nPackages (a collection of modules)\n\nlowercasepackagenames"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#comments",
    "href": "modules/module-1/slides/3-python-basics.html#comments",
    "title": "Python basics",
    "section": "Comments",
    "text": "Comments\n\nComments are useful in explaining what code is supposed to do.\nThey are essential for when you, and others, need to read your code later to problem solve or add to your code (10:1 reading to writing code ratio).\nUse them sparingly, as they can clutter code.\nTry and make variable and function names self explanatory.\nYou can comment with the hastag or encapsulate with triple quotation marks:\n\n\n\ncomments.py\n\n# This is a single line comment\na_string = \"a string\"\n\n\"\"\" Double quotation mark multiline comment\n    Here is some more of the comment\n\"\"\"\ndef i_am_a_function():\n    return True\n\n''' Single quotation mark multiline comment\n    Here is some more of the comment\n'''\ndef i_am_another_function():\n    return True"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#comments-1",
    "href": "modules/module-1/slides/3-python-basics.html#comments-1",
    "title": "Python basics",
    "section": "Comments",
    "text": "Comments\n\nYou will also come across something called docstrings. These are basically comments associated with functions / methods and classes.\nYou will see them associated with modules as well (at the top of files).\n\n\n\ndocstrings.py\n\ndef i_am_function(args1, args2):\n    \"\"\"A concise title\n\n    A description of the function.\n\n    Args:\n        args1: I am the first argument to the function.\n        args2: I am the second argument to the function.\n    Returns:\n        x: the addition of the 2 provided arguments.\n    \"\"\"\n\n    x = args1 + args2\n    \n    return x"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#basic-operators",
    "href": "modules/module-1/slides/3-python-basics.html#basic-operators",
    "title": "Python basics",
    "section": "Basic operators",
    "text": "Basic operators\n\nOperators manipulate and compare data (which are stored in variables). Operator types include:\n\nArithmetic: + - * /\nComparison: == &gt; &lt;\nLogical: and or not\nAssignment: = += -= *="
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#more-advanced-operators",
    "href": "modules/module-1/slides/3-python-basics.html#more-advanced-operators",
    "title": "Python basics",
    "section": "More advanced operators",
    "text": "More advanced operators\n\nThese include:\n\nBitwise: & | ^ &lt;&lt; &gt;&gt;\nMembership: in   not in\nIdentity: is   is not"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#control-flow---if-statements",
    "href": "modules/module-1/slides/3-python-basics.html#control-flow---if-statements",
    "title": "Python basics",
    "section": "Control flow - if statements",
    "text": "Control flow - if statements\n\n\nif_statement.py\n\npatient_allergy = \"amoxicillin\"\n\nif patient_allergy == \"amoxicillin\":\n    allergy_group = \"penicillins\"\nelif patient_allergy == \"tazocin\":\n    allergy_group = \"penicillins\"\nelse:\n    allergy_group = \"others\"\n\nprint(\"Patient is allergic to\", allergy_group)\n\nOutput\n    Patient is allergic to penicillins"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#control-flow---for-loops",
    "href": "modules/module-1/slides/3-python-basics.html#control-flow---for-loops",
    "title": "Python basics",
    "section": "Control flow - for loops",
    "text": "Control flow - for loops\n\n\nfor_loop.py\n\nlist_of_numbers = [1, 2, 3, 4, 5]\n\nfor number in list_of_numbers:\n    print(number)\n\nOutput\n    1\n    2\n    3\n    4\n    5"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#control-flow---while-loops",
    "href": "modules/module-1/slides/3-python-basics.html#control-flow---while-loops",
    "title": "Python basics",
    "section": "Control flow - while loops",
    "text": "Control flow - while loops\n\n\nwhile_loop.py\n\ncount = 1\n\nwhile count &lt;= 5:\n    print(count)\n    count += 1\n\nOutput\n    1\n    2\n    3\n    4\n    5"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#functions-methods",
    "href": "modules/module-1/slides/3-python-basics.html#functions-methods",
    "title": "Python basics",
    "section": "Functions (methods)",
    "text": "Functions (methods)\n\nBlocks of reusable code that perform a specific task.\nHelp in organising code and making it more modular.\nPart of the DRY (don't repeat yourself) philosophy.\nA method is just a function, used within a class (a higher organisational entity in python)."
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#functions-methods-1",
    "href": "modules/module-1/slides/3-python-basics.html#functions-methods-1",
    "title": "Python basics",
    "section": "Functions (methods)",
    "text": "Functions (methods)\n\n\nfunctions.py\n\ndef name_of_function(argument_1, argument_2):\n    a_variable = argument_1 + argument_2\n    another_variable = \"a return value\"\n\n    print (a_variable)\n\n    return another_variable"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#other-things-to-be-aware-of",
    "href": "modules/module-1/slides/3-python-basics.html#other-things-to-be-aware-of",
    "title": "Python basics",
    "section": "Other things to be aware of",
    "text": "Other things to be aware of\n\nThere are several other organisational practices in python, but we will leave these for another day.\nJust so you are aware, these are:\n\nclasses\nmodules\npackages\n\nThere are also:\n\nSome fancy syntax practices\nReading inputs from the terminal\nFile handling\nObject oriented programming"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#error-handling",
    "href": "modules/module-1/slides/3-python-basics.html#error-handling",
    "title": "Python basics",
    "section": "Error Handling",
    "text": "Error Handling\n\nError handling is one of the most important concepts to understand and manage well. You will be spending 25-50% of your time debugging.\nDebugging is the practice of looking for bugs (errors in the code) and trying to fix them.\nWhen an error happens in python, an exception is raised. You then use the traceback to try and find the cause of the error."
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#error-handling-1",
    "href": "modules/module-1/slides/3-python-basics.html#error-handling-1",
    "title": "Python basics",
    "section": "Error Handling",
    "text": "Error Handling\n\nIf you know an error might happen at a set location, you can catch errors directly in your code:\n\n\n\nfunctions.py\n\ntry:\n    variable = 1 + \"a\"\nexcept:\n    print(\"I knew that you could not add an integer and a string!\")\nelse:\n    print(\"Somehow I did not get an error!\")\n\nOutput\n    I knew that you could not add an integer and a string!"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#the-traceback",
    "href": "modules/module-1/slides/3-python-basics.html#the-traceback",
    "title": "Python basics",
    "section": "The Traceback",
    "text": "The Traceback\n\nAt first, this looks like a very complicated output\n\n\n    Traceback (most recent call last):\n        File \"/User/a_user/code/error_in_code.py\", line 28, in &lt;module&gt;\n            print(fruit_prices.get_price(\"pear\"))\n        File \"/User/a_user/code/error_in_code.py\", line 21, in get_price\n            return self._price(fruit)\n        File \"/User/a_user/code/error_in_code.py\", line 24, in _price\n            return self.prices[fruit]\n    KeyError: 'pear'"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#the-traceback-1",
    "href": "modules/module-1/slides/3-python-basics.html#the-traceback-1",
    "title": "Python basics",
    "section": "The Traceback",
    "text": "The Traceback\n\nWhen reading a Traceback, alwas read from the last line upwards.\n\n\n    Traceback (most recent call last):\n        File \"/User/a_user/code/error_in_code.py\", line 28, in &lt;module&gt;\n            print(fruit_prices.get_price(\"pear\"))\n        File \"/User/a_user/code/error_in_code.py\", line 21, in get_price\n            return self._price(fruit)\n        File \"/User/a_user/code/error_in_code.py\", line 24, in _price\n            return self.prices[fruit]\n    ==&gt; KeyError: 'pear' &lt;=="
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#compare-the-traceback-to-the-code",
    "href": "modules/module-1/slides/3-python-basics.html#compare-the-traceback-to-the-code",
    "title": "Python basics",
    "section": "Compare the Traceback to the code",
    "text": "Compare the Traceback to the code\n\nCompare against the code\n\n\n\nfunctions.py\n\nclass FruitPrices:\n    def __init__(self):\n        # 'pear' key does not exist!\n        self.prices = {\"apple\": 1.55, \"banana\": 2.44}\n\n    def get_price(self, fruit):\n        return self._price(fruit)\n\n    def _price(self, fruit):\n        return self.prices[fruit]\n\n\nfruit_prices = FruitPrices()\n\nprint(fruit_prices.get_price(\"pear\"))"
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#you-got-all-that",
    "href": "modules/module-1/slides/3-python-basics.html#you-got-all-that",
    "title": "Python basics",
    "section": "You got all that?",
    "text": "You got all that?\n\nNow it is your turn.\nTime for some hands on coding in Lesson 2."
  },
  {
    "objectID": "modules/module-1/slides/3-python-basics.html#computers-are-pedantic",
    "href": "modules/module-1/slides/3-python-basics.html#computers-are-pedantic",
    "title": "Python basics",
    "section": "Computers are pedantic!",
    "text": "Computers are pedantic!\n\nRemember that computers think in True and False, e.g. 1 and 0s. They are literal thinkers.\nEven one character being out of place can break an entire code base. So watch out for that unpaired quotation mark, look out for that space that should not be there, and make sure you match your indentations to your if statements.\nNow go have some fun in your tutor groups with hands-on coding and debugging."
  },
  {
    "objectID": "modules/module-1/slides/5-session-close.html",
    "href": "modules/module-1/slides/5-session-close.html",
    "title": "Session close",
    "section": "",
    "text": "Many thanks for joining us today.\nWe hope you found today’s session helpful and a great start / addition to your digital health carer.\nCould you please complete feedback before you leave.\nPlease join us for more advanced courses, due out soon."
  },
  {
    "objectID": "modules/module-1/slides/5-session-close.html#many-thanks",
    "href": "modules/module-1/slides/5-session-close.html#many-thanks",
    "title": "Session close",
    "section": "",
    "text": "Many thanks for joining us today.\nWe hope you found today’s session helpful and a great start / addition to your digital health carer.\nCould you please complete feedback before you leave.\nPlease join us for more advanced courses, due out soon."
  },
  {
    "objectID": "modules/module-1/slides/1-introduction.html",
    "href": "modules/module-1/slides/1-introduction.html",
    "title": "?var:coding-module-11",
    "section": "",
    "text": "Welcome and thank you for joining our course.\nWe hope you enjoy the course and find it helpful.\nThere are plans for further, more advanced courses, in the near future.\nPlease provide feedback at the end of the course, so we can help improve things further."
  },
  {
    "objectID": "modules/module-1/slides/1-introduction.html#introduction",
    "href": "modules/module-1/slides/1-introduction.html#introduction",
    "title": "?var:coding-module-11",
    "section": "",
    "text": "Welcome and thank you for joining our course.\nWe hope you enjoy the course and find it helpful.\nThere are plans for further, more advanced courses, in the near future.\nPlease provide feedback at the end of the course, so we can help improve things further."
  },
  {
    "objectID": "modules/module-1/slides/1-introduction.html#the-coding-environment",
    "href": "modules/module-1/slides/1-introduction.html#the-coding-environment",
    "title": "?var:coding-module-11",
    "section": "The coding environment",
    "text": "The coding environment\n\nWe will explore the development (teaching) environment.\nGet you connected to the development environment.\nGet you running some common command line functions in Lession 1."
  },
  {
    "objectID": "modules/module-1/slides/1-introduction.html#python-basics",
    "href": "modules/module-1/slides/1-introduction.html#python-basics",
    "title": "?var:coding-module-11",
    "section": "Python Basics",
    "text": "Python Basics\n\nHow do we communicate with computers.\nIntroduction to the python programming language.\nLearn about:\n\nSyntax\nVariables\nOperators\nControl flow\nFunctions\nError handling\n\nThen get you programming in Lesson 2."
  },
  {
    "objectID": "modules/module-1/slides/1-introduction.html#build-an-app",
    "href": "modules/module-1/slides/1-introduction.html#build-an-app",
    "title": "?var:coding-module-11",
    "section": "Build an app",
    "text": "Build an app\n\nFinally, we will get you building your own clinical app"
  },
  {
    "objectID": "modules/module-1/slides/1-introduction.html#why-learn-to-code",
    "href": "modules/module-1/slides/1-introduction.html#why-learn-to-code",
    "title": "?var:coding-module-11",
    "section": "Why learn to code?",
    "text": "Why learn to code?\n\nWe learn biology and anatomy at university to better understand and practice clinical medicine. Why don’t we learn the base subject to better understand and practice digital medicine?\nOf course not all clinicians should be expected to have extensive knowledge in coding and digital health; that would take clinicians away from the front line, and also clinicians are expensive coders.\nHowever, having a small number of subject matter experts in both disciplines can be highly advantageous to implementing better and safer digital health projects."
  },
  {
    "objectID": "modules/module-1/slides/1-introduction.html#how-can-you-use-your-coding-skills-in-health-care",
    "href": "modules/module-1/slides/1-introduction.html#how-can-you-use-your-coding-skills-in-health-care",
    "title": "?var:coding-module-11",
    "section": "How can you use your coding skills in health care?",
    "text": "How can you use your coding skills in health care?\n\nData analytics\nBuilding apps\nInteroperability\nAutomate routine tasks\nHelp lead a software development team with knowledge of both digital and clinical aspects.\nIndeed, anything digital"
  },
  {
    "objectID": "modules/module-1/slides/1-introduction.html#tutor-groups",
    "href": "modules/module-1/slides/1-introduction.html#tutor-groups",
    "title": "?var:coding-module-11",
    "section": "Tutor groups",
    "text": "Tutor groups\n\nHas everyone been placed in a tutor group?"
  },
  {
    "objectID": "modules/module-1/slides/1-introduction.html#off-we-go-to-the-shell",
    "href": "modules/module-1/slides/1-introduction.html#off-we-go-to-the-shell",
    "title": "?var:coding-module-11",
    "section": "Off we go to the shell",
    "text": "Off we go to the shell"
  },
  {
    "objectID": "modules/module-2/slides/1-introduction.html",
    "href": "modules/module-2/slides/1-introduction.html",
    "title": "?var:coding-module-12",
    "section": "",
    "text": "Welcome and thank you for joining our course.\nWe hope you enjoy the course and find it helpful.\nThere are plans for further, more advanced courses, in the near future.\nPlease provide feedback at the end of the course, so we can help improve things further."
  },
  {
    "objectID": "modules/module-2/slides/1-introduction.html#introduction",
    "href": "modules/module-2/slides/1-introduction.html#introduction",
    "title": "?var:coding-module-12",
    "section": "",
    "text": "Welcome and thank you for joining our course.\nWe hope you enjoy the course and find it helpful.\nThere are plans for further, more advanced courses, in the near future.\nPlease provide feedback at the end of the course, so we can help improve things further."
  },
  {
    "objectID": "cheatsheets/venv.html",
    "href": "cheatsheets/venv.html",
    "title": "Python virtual environment",
    "section": "",
    "text": "$ python3 -m venv venv"
  },
  {
    "objectID": "cheatsheets/venv.html#create-a-python-virtual-environment-mac-and-linux",
    "href": "cheatsheets/venv.html#create-a-python-virtual-environment-mac-and-linux",
    "title": "Python virtual environment",
    "section": "",
    "text": "$ python3 -m venv venv"
  },
  {
    "objectID": "cheatsheets/venv.html#to-activate-the-virtual-environment",
    "href": "cheatsheets/venv.html#to-activate-the-virtual-environment",
    "title": "Python virtual environment",
    "section": "To activate the virtual environment",
    "text": "To activate the virtual environment\n$ source venv/bin/activate"
  },
  {
    "objectID": "learn/ask-a-clinician/index.html",
    "href": "learn/ask-a-clinician/index.html",
    "title": "Ask a clinician",
    "section": "",
    "text": "Under construction"
  },
  {
    "objectID": "cheatsheets/index.html",
    "href": "cheatsheets/index.html",
    "title": "Cheatsheets in coding",
    "section": "",
    "text": "A collection of helpful commands and code that I seem to have to search each time I need to use them. I thought I would put these snippets of code and commands in an easy to find place.\n\nvenv"
  },
  {
    "objectID": "modules/module-2/index.html",
    "href": "modules/module-2/index.html",
    "title": "?var:coding-module-12",
    "section": "",
    "text": "After learning about the basics about coding and the programming language Python in ?var:coding-module-12"
  },
  {
    "objectID": "modules/module-2/index.html#chose-a-slide-deck",
    "href": "modules/module-2/index.html#chose-a-slide-deck",
    "title": "?var:coding-module-12",
    "section": "Chose a slide deck",
    "text": "Chose a slide deck\n\n\n1 - Introduction"
  },
  {
    "objectID": "modules/module-1/index.html",
    "href": "modules/module-1/index.html",
    "title": "Module 1 - Where is the on switch?",
    "section": "",
    "text": "This is the first module of the CWC course, and is designed for those with very little to no experience with coding (programmatic, not clinical terminologies)."
  },
  {
    "objectID": "modules/module-1/index.html#chose-a-slide-deck",
    "href": "modules/module-1/index.html#chose-a-slide-deck",
    "title": "Module 1 - Where is the on switch?",
    "section": "Chose a slide deck",
    "text": "Chose a slide deck\n\n\n1 - Introduction\n\n\n2 - Coding environment\n\n\n3 - Python basics\n\n\n4 - Let’s build a web app\n\n\n5 - Session close"
  },
  {
    "objectID": "modules/module-1/slides/2-coding-environment.html",
    "href": "modules/module-1/slides/2-coding-environment.html",
    "title": "Coding environment (and the shell)",
    "section": "",
    "text": "We will be using the GitHub Codespace development environment.\nThis is a browser version of the well known desktop VS Code development environment.\nIn the context of this course, a development environment is synonymous with the teaching environment."
  },
  {
    "objectID": "modules/module-1/slides/2-coding-environment.html#todays-hands-on-sessions",
    "href": "modules/module-1/slides/2-coding-environment.html#todays-hands-on-sessions",
    "title": "Coding environment (and the shell)",
    "section": "",
    "text": "We will be using the GitHub Codespace development environment.\nThis is a browser version of the well known desktop VS Code development environment.\nIn the context of this course, a development environment is synonymous with the teaching environment."
  },
  {
    "objectID": "modules/module-1/slides/2-coding-environment.html#commands",
    "href": "modules/module-1/slides/2-coding-environment.html#commands",
    "title": "Coding environment (and the shell)",
    "section": "Commands",
    "text": "Commands\n\nA command is a piece of code that carries out a specific task.\nThese tasks can be as simple as showing you what folder you are in, to printing, changing settings, and updating the operating system."
  },
  {
    "objectID": "modules/module-1/slides/2-coding-environment.html#using-the-terminal",
    "href": "modules/module-1/slides/2-coding-environment.html#using-the-terminal",
    "title": "Coding environment (and the shell)",
    "section": "Using the terminal",
    "text": "Using the terminal\n\nAlso called the command line interface (CLI) or the shell.\n\nSteps:\n\nSelect the terminal (aka click on it).\nType in your command (this needs to be typed out exactly).\nPress enter to run the command.\n\nPro tip:\n\nIf you want to run a previously run command, you can select it with the ↑ and ↓ arrow keys on the keyboard."
  },
  {
    "objectID": "modules/module-1/slides/2-coding-environment.html#list-files-and-folders-command",
    "href": "modules/module-1/slides/2-coding-environment.html#list-files-and-folders-command",
    "title": "Coding environment (and the shell)",
    "section": "List files and folders command",
    "text": "List files and folders command\n\nThe ls command."
  },
  {
    "objectID": "modules/module-1/slides/2-coding-environment.html#change-directory-command",
    "href": "modules/module-1/slides/2-coding-environment.html#change-directory-command",
    "title": "Coding environment (and the shell)",
    "section": "Change directory command",
    "text": "Change directory command\n\nThe cd command.\ncd .. takes you back to the previous (parent) folder."
  },
  {
    "objectID": "modules/module-1/slides/2-coding-environment.html#where-am-i",
    "href": "modules/module-1/slides/2-coding-environment.html#where-am-i",
    "title": "Coding environment (and the shell)",
    "section": "Where am I?",
    "text": "Where am I?\n\npwd is the print working directory command."
  },
  {
    "objectID": "modules/module-1/slides/2-coding-environment.html#liveshare",
    "href": "modules/module-1/slides/2-coding-environment.html#liveshare",
    "title": "Coding environment (and the shell)",
    "section": "LiveShare",
    "text": "LiveShare\n\nWe will be using liveshare for the hands-on learning sessions. This is an extension of Codespace (and VS Code) that allows others to work (and learn) in the same development environment."
  },
  {
    "objectID": "modules/module-1/slides/2-coding-environment.html#codespace-view",
    "href": "modules/module-1/slides/2-coding-environment.html#codespace-view",
    "title": "Coding environment (and the shell)",
    "section": "Codespace view",
    "text": "Codespace view"
  },
  {
    "objectID": "modules/module-1/slides/2-coding-environment.html#lession-1",
    "href": "modules/module-1/slides/2-coding-environment.html#lession-1",
    "title": "Coding environment (and the shell)",
    "section": "Lession 1",
    "text": "Lession 1\n\nJoin your tutor group in the Zoom break out rooms.\nFollow the link to the online learning environment (Codespace).\nChange the directory (don’t type the $. This is just how we show this is the command line):\n\n    $ cd users/{your_name}/module-1/hands-on\n\nReplace {your_name} with your own name in the format firstname underscore lastname, eg john_doe.\nRun the following command in the new directory\n\n    $ python lession_1.py\n\nDid it work? If so, open up the lession_1.py file.\nAny problems, just ask your tutor for help.\nThere is no such thing as a stupid question, only the question left unanswered.\nWe will give you 20 minutes for lession 1."
  },
  {
    "objectID": "modules/module-1/slides/4-lets-build.html#streamlit",
    "href": "modules/module-1/slides/4-lets-build.html#streamlit",
    "title": "🎵 Do you want to build a web app? 🎵",
    "section": "Streamlit",
    "text": "Streamlit\n\nWe will be using a python web app framework called Streamlit.\nFrameworks are great, as someone else has done most of the heavy coding to make it easier for you to carry out a task (in this case building a web app)."
  },
  {
    "objectID": "modules/module-1/slides/4-lets-build.html#preinstalled-for-you",
    "href": "modules/module-1/slides/4-lets-build.html#preinstalled-for-you",
    "title": "🎵 Do you want to build a web app? 🎵",
    "section": "Preinstalled for you",
    "text": "Preinstalled for you\n\nWe have preinstalled Streamlit on Codespace for you.\nTime for lession 3.\nStay in the module-1/hands-on folder.\nRun this code:\n\n\n    $ streamlit run lesson_3.py"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html",
    "href": "learn/learn-python/module-1/3-python-basics.html",
    "title": "Python basics",
    "section": "",
    "text": "At its core, a computer is essentially a device that answers yes-no questions.\nIt answers these simple questions very very quickly.\nBy asking the computer millions of these yes-no questions, it can calculate answers to very complex questions."
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#what-are-computers",
    "href": "learn/learn-python/module-1/3-python-basics.html#what-are-computers",
    "title": "Python basics",
    "section": "What are computers?",
    "text": "What are computers?\n\nAt its core, a computer is essentially a device that answers yes-no questions.\nIt answers these simple questions very very quickly.\nBy asking the computer millions of these yes-no questions, it can calculate answers to very complex questions."
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#how-do-computers-think",
    "href": "learn/learn-python/module-1/3-python-basics.html#how-do-computers-think",
    "title": "Python basics",
    "section": "How do computers think?",
    "text": "How do computers think?\n\nConfused by the last statement? Let me expand…\nComputers have lots of components to enable them to work.\n\nScreen to show you its output.\nKeyboard and mouse to allow you to communicate with the computer.\nInside the computer’s chassis:\n\nHard drives\nMemory sticks\nFans\nPower supplies\nMotherboards\nProcessors\n\n\nThe processor of a computer is where all of the thinking takes place."
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#how-do-computers-think-1",
    "href": "learn/learn-python/module-1/3-python-basics.html#how-do-computers-think-1",
    "title": "Python basics",
    "section": "How do computers think?",
    "text": "How do computers think?\n\nThe processor is where these yes-no questions are undertaken.\nThe processor receives instructions in binary form.\nBinary is basically a string of 1s and 0s (eg 01001011).\nAs modern computers communicate in binary (yes-no) form, they are said to be digital.\nThe processor reads these binary instructions.\nEach instruction results in either a True or False answer (aka yes-no answer). The output (aka answer) is also in binary."
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#so-how-do-we-communicate-with-computers",
    "href": "learn/learn-python/module-1/3-python-basics.html#so-how-do-we-communicate-with-computers",
    "title": "Python basics",
    "section": "So how do we communicate with computers?",
    "text": "So how do we communicate with computers?\n\nSo computers listen, think and talk in binary.\nWe need a method to communicate with them, enabling us to get them to do what we want them to do.\nThis is where programming languages come into play."
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#programming-languages",
    "href": "learn/learn-python/module-1/3-python-basics.html#programming-languages",
    "title": "Python basics",
    "section": "Programming languages",
    "text": "Programming languages\n\nThere are over 9000 programming languages, but much less than this in routine use.\nA programming language is written in somewhat of a human readable form (depends on the langauge).\nPopular langauges include:\n\nJavascript / typescript\nC++\nGo\nJava\nSwift\nR\nPython"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#translation",
    "href": "learn/learn-python/module-1/3-python-basics.html#translation",
    "title": "Python basics",
    "section": "Translation",
    "text": "Translation\n\nWhen you have written your code in your favourite programming language, a software program (called the interpreter or compiler) reads your code and translates it into 1s and 0s which the computer can then read and act upon."
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#we-will-be-learning-python",
    "href": "learn/learn-python/module-1/3-python-basics.html#we-will-be-learning-python",
    "title": "Python basics",
    "section": "We will be learning python",
    "text": "We will be learning python"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#the-python-programming-language",
    "href": "learn/learn-python/module-1/3-python-basics.html#the-python-programming-language",
    "title": "Python basics",
    "section": "The Python programming language",
    "text": "The Python programming language\n\nPython is a scripting language interpreted and compiled at runtime.\nIts syntax emphasises readability and simplicity, utilising indentation for code structuring.\nPython supports various programming paradigms, including procedural, object-oriented, and functional.\nWith a vast standard library and active community support, Python is widely used for web development, data analysis, AI, and automation."
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#what-is-in-a-code",
    "href": "learn/learn-python/module-1/3-python-basics.html#what-is-in-a-code",
    "title": "Python basics",
    "section": "What is in a code?",
    "text": "What is in a code?\n\nYou need different elements in your code to be able to tell the computer what to do. These include:\n\nVariables\nOperators\nExpressions\nFlow control\nFunctions\nError handling\nMore advanced functionalities"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#variables",
    "href": "learn/learn-python/module-1/3-python-basics.html#variables",
    "title": "Python basics",
    "section": "Variables",
    "text": "Variables\n\nA single variable is a contained space in the computer’s memory.\nSimple in-built variables include:\n\n\n\nvariables_simple.py\n\na_string = \"I am a string\"\nan_integer = 11\na_float = 8.04\na_boolean = True"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#variables-1",
    "href": "learn/learn-python/module-1/3-python-basics.html#variables-1",
    "title": "Python basics",
    "section": "Variables",
    "text": "Variables\n\nMore complex variables include:\n\n\n\nvariables_more_complex.py\n\na_list = [\"first element of list\", \"second element of list\"]\nanother_list = [1, 5, 3, 6]\na_dictionary = {\n    \"1st key\": \"1st value\",\n    \"2nd key\": \"2nd value\",\n}\na_tuple = (1, 2, 3, 4, 6, 7)\na_set = {4, 2, 5, 3}"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#spaces",
    "href": "learn/learn-python/module-1/3-python-basics.html#spaces",
    "title": "Python basics",
    "section": "Spaces",
    "text": "Spaces\n\nVariables names cannot have spaces, if you add a space, the computer will read this as two separate variables:\n\n\n\nspaces.py\n\nvariable_a = \"I am a variable\"\nvariable b = \"The added space will cause an error\"\n\nSyntax error:\n    Cell In[1], line 2\n        variable b = \"The added space will cause an error\"\n                 ^\n    SyntaxError: invalid syntax"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#double-or-single-quotation-marks",
    "href": "learn/learn-python/module-1/3-python-basics.html#double-or-single-quotation-marks",
    "title": "Python basics",
    "section": "Double or single quotation marks?",
    "text": "Double or single quotation marks?\n\nYou will see people using ‘single’ and also “double” quotation marks. It does not matter which you chose, but be consistent. If you accidently mix pairs of quotation marks you will get strange errors.\n\n\n\nquotation_marks.py\n\nvariable_a = \"All good here with two single qoutation marks\"\nvariable_b = \"I have the wrong matching qoutation marks'\nvariable_c = 'Single quotation marks'\n\n\nSuddenly variable_c is part of the string for variable_b"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#using-both-types-of-quotation-marks",
    "href": "learn/learn-python/module-1/3-python-basics.html#using-both-types-of-quotation-marks",
    "title": "Python basics",
    "section": "Using both types of quotation marks",
    "text": "Using both types of quotation marks\n\nYou can embed quotation marks within each other\n\n\n\nquotation_marks.py\n\nvariable_a = \"I want to highlight 'this' word\"\nvariable_b = 'I would like to show you \"this\"'"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#f-strings",
    "href": "learn/learn-python/module-1/3-python-basics.html#f-strings",
    "title": "Python basics",
    "section": "f-strings",
    "text": "f-strings\n\nUseful to know\n\n\n\nf_string.py\n\nage = 25\nprint(f\"The patient's age is : { age }\")"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#indentation",
    "href": "learn/learn-python/module-1/3-python-basics.html#indentation",
    "title": "Python basics",
    "section": "Indentation",
    "text": "Indentation\n\nPython is extremely sensitive to indentation. One extra space or tab in front of a line of code (an expression) and you will not hear the end of it in terms of errors or strange results. Indentation (in the form of tabs) of expressions shows the computer which previous expression it relates to."
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#indentation-1",
    "href": "learn/learn-python/module-1/3-python-basics.html#indentation-1",
    "title": "Python basics",
    "section": "Indentation",
    "text": "Indentation\n\n\nindentation.py\n\nif drug_prescribed == True:\n    if drug_given == True:\n        record_drug_given = True\n        print(\"Drug has been prescribed and given to the patient\")\n    else:\n        print(\"Drug has been prescribed but not given\")\nelse:\n    print(\"Drug has not been prescribed\")\n\nprint(\"Drug round complete!\")\n\nOutput (if drug has been prescribed and given)\n    Drug has been prescribed and given to the patient\n    Drug round complete!"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#indentation-2",
    "href": "learn/learn-python/module-1/3-python-basics.html#indentation-2",
    "title": "Python basics",
    "section": "Indentation",
    "text": "Indentation\n\n\nindentation.py\n\nif drug_prescribed == True:\n    if drug_given == True:\n        record_drug_given = True\n        print(\"Drug has been prescribed and given to the patient\")\n    else:\n        print(\"Drug has been prescribed but not given\")\nelse:\n    print(\"Drug has not been prescribed\")\n\n    print(\"Drug round complete!\")\n\nOutput (if drug has been prescribed and given)\n    Drug has been prescribed and given to the patient"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#naming-conventions",
    "href": "learn/learn-python/module-1/3-python-basics.html#naming-conventions",
    "title": "Python basics",
    "section": "Naming conventions",
    "text": "Naming conventions\n\nThere are several naming conventions for programming languages. In python, conventions are:\n\nVariables, functions and methods\n\nsnake_case\n\nConstants\n\nCONSTANT_CASE\n\nClasses (a higher organisation method in python)\n\nCamelCase\n\nModules (a file with python code inside)\n\nsnake_case\n\nPackages (a collection of modules)\n\nlowercasepackagenames"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#comments",
    "href": "learn/learn-python/module-1/3-python-basics.html#comments",
    "title": "Python basics",
    "section": "Comments",
    "text": "Comments\n\nComments are useful in explaining what code is supposed to do.\nThey are essential for when you, and others, need to read your code later to problem solve or add to your code (10:1 reading to writing code ratio).\nUse them sparingly, as they can clutter code.\nTry and make variable and function names self explanatory.\nYou can comment with the hastag or encapsulate with triple quotation marks:\n\n\n\ncomments.py\n\n# This is a single line comment\na_string = \"a string\"\n\n\"\"\" Double quotation mark multiline comment\n    Here is some more of the comment\n\"\"\"\ndef i_am_a_function():\n    return True\n\n''' Single quotation mark multiline comment\n    Here is some more of the comment\n'''\ndef i_am_another_function():\n    return True"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#comments-1",
    "href": "learn/learn-python/module-1/3-python-basics.html#comments-1",
    "title": "Python basics",
    "section": "Comments",
    "text": "Comments\n\nYou will also come across something called docstrings. These are basically comments associated with functions / methods and classes.\nYou will see them associated with modules as well (at the top of files).\n\n\n\ndocstrings.py\n\ndef i_am_function(args1, args2):\n    \"\"\"A concise title\n\n    A description of the function.\n\n    Args:\n        args1: I am the first argument to the function.\n        args2: I am the second argument to the function.\n    Returns:\n        x: the addition of the 2 provided arguments.\n    \"\"\"\n\n    x = args1 + args2\n    \n    return x"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#basic-operators",
    "href": "learn/learn-python/module-1/3-python-basics.html#basic-operators",
    "title": "Python basics",
    "section": "Basic operators",
    "text": "Basic operators\n\nOperators manipulate and compare data (which are stored in variables). Operator types include:\n\nArithmetic: + - * /\nComparison: == &gt; &lt;\nLogical: and or not\nAssignment: = += -= *="
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#more-advanced-operators",
    "href": "learn/learn-python/module-1/3-python-basics.html#more-advanced-operators",
    "title": "Python basics",
    "section": "More advanced operators",
    "text": "More advanced operators\n\nThese include:\n\nBitwise: & | ^ &lt;&lt; &gt;&gt;\nMembership: in   not in\nIdentity: is   is not"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#control-flow---if-statements",
    "href": "learn/learn-python/module-1/3-python-basics.html#control-flow---if-statements",
    "title": "Python basics",
    "section": "Control flow - if statements",
    "text": "Control flow - if statements\n\n\nif_statement.py\n\npatient_allergy = \"amoxicillin\"\n\nif patient_allergy == \"amoxicillin\":\n    allergy_group = \"penicillins\"\nelif patient_allergy == \"tazocin\":\n    allergy_group = \"penicillins\"\nelse:\n    allergy_group = \"others\"\n\nprint(\"Patient is allergic to\", allergy_group)\n\nOutput\n    Patient is allergic to penicillins"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#control-flow---for-loops",
    "href": "learn/learn-python/module-1/3-python-basics.html#control-flow---for-loops",
    "title": "Python basics",
    "section": "Control flow - for loops",
    "text": "Control flow - for loops\n\n\nfor_loop.py\n\nlist_of_numbers = [1, 2, 3, 4, 5]\n\nfor number in list_of_numbers:\n    print(number)\n\nOutput\n    1\n    2\n    3\n    4\n    5"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#control-flow---while-loops",
    "href": "learn/learn-python/module-1/3-python-basics.html#control-flow---while-loops",
    "title": "Python basics",
    "section": "Control flow - while loops",
    "text": "Control flow - while loops\n\n\nwhile_loop.py\n\ncount = 1\n\nwhile count &lt;= 5:\n    print(count)\n    count += 1\n\nOutput\n    1\n    2\n    3\n    4\n    5"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#functions-methods",
    "href": "learn/learn-python/module-1/3-python-basics.html#functions-methods",
    "title": "Python basics",
    "section": "Functions (methods)",
    "text": "Functions (methods)\n\nBlocks of reusable code that perform a specific task.\nHelp in organising code and making it more modular.\nPart of the DRY (don't repeat yourself) philosophy.\nA method is just a function, used within a class (a higher organisational entity in python)."
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#functions-methods-1",
    "href": "learn/learn-python/module-1/3-python-basics.html#functions-methods-1",
    "title": "Python basics",
    "section": "Functions (methods)",
    "text": "Functions (methods)\n\n\nfunctions.py\n\ndef name_of_function(argument_1, argument_2):\n    a_variable = argument_1 + argument_2\n    another_variable = \"a return value\"\n\n    print (a_variable)\n\n    return another_variable"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#other-things-to-be-aware-of",
    "href": "learn/learn-python/module-1/3-python-basics.html#other-things-to-be-aware-of",
    "title": "Python basics",
    "section": "Other things to be aware of",
    "text": "Other things to be aware of\n\nThere are several other organisational practices in python, but we will leave these for another day.\nJust so you are aware, these are:\n\nclasses\nmodules\npackages\n\nThere are also:\n\nSome fancy syntax practices\nReading inputs from the terminal\nFile handling\nObject oriented programming"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#error-handling",
    "href": "learn/learn-python/module-1/3-python-basics.html#error-handling",
    "title": "Python basics",
    "section": "Error Handling",
    "text": "Error Handling\n\nError handling is one of the most important concepts to understand and manage well. You will be spending 25-50% of your time debugging.\nDebugging is the practice of looking for bugs (errors in the code) and trying to fix them.\nWhen an error happens in python, an exception is raised. You then use the traceback to try and find the cause of the error."
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#error-handling-1",
    "href": "learn/learn-python/module-1/3-python-basics.html#error-handling-1",
    "title": "Python basics",
    "section": "Error Handling",
    "text": "Error Handling\n\nIf you know an error might happen at a set location, you can catch errors directly in your code:\n\n\n\nfunctions.py\n\ntry:\n    variable = 1 + \"a\"\nexcept:\n    print(\"I knew that you could not add an integer and a string!\")\nelse:\n    print(\"Somehow I did not get an error!\")\n\nOutput\n    I knew that you could not add an integer and a string!"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#the-traceback",
    "href": "learn/learn-python/module-1/3-python-basics.html#the-traceback",
    "title": "Python basics",
    "section": "The Traceback",
    "text": "The Traceback\n\nAt first, this looks like a very complicated output\n\n\n    Traceback (most recent call last):\n        File \"/User/a_user/code/error_in_code.py\", line 28, in &lt;module&gt;\n            print(fruit_prices.get_price(\"pear\"))\n        File \"/User/a_user/code/error_in_code.py\", line 21, in get_price\n            return self._price(fruit)\n        File \"/User/a_user/code/error_in_code.py\", line 24, in _price\n            return self.prices[fruit]\n    KeyError: 'pear'"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#the-traceback-1",
    "href": "learn/learn-python/module-1/3-python-basics.html#the-traceback-1",
    "title": "Python basics",
    "section": "The Traceback",
    "text": "The Traceback\n\nWhen reading a Traceback, alwas read from the last line upwards.\n\n\n    Traceback (most recent call last):\n        File \"/User/a_user/code/error_in_code.py\", line 28, in &lt;module&gt;\n            print(fruit_prices.get_price(\"pear\"))\n        File \"/User/a_user/code/error_in_code.py\", line 21, in get_price\n            return self._price(fruit)\n        File \"/User/a_user/code/error_in_code.py\", line 24, in _price\n            return self.prices[fruit]\n    ==&gt; KeyError: 'pear' &lt;=="
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#compare-the-traceback-to-the-code",
    "href": "learn/learn-python/module-1/3-python-basics.html#compare-the-traceback-to-the-code",
    "title": "Python basics",
    "section": "Compare the Traceback to the code",
    "text": "Compare the Traceback to the code\n\nCompare against the code\n\n\n\nfunctions.py\n\nclass FruitPrices:\n    def __init__(self):\n        # 'pear' key does not exist!\n        self.prices = {\"apple\": 1.55, \"banana\": 2.44}\n\n    def get_price(self, fruit):\n        return self._price(fruit)\n\n    def _price(self, fruit):\n        return self.prices[fruit]\n\n\nfruit_prices = FruitPrices()\n\nprint(fruit_prices.get_price(\"pear\"))"
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#you-got-all-that",
    "href": "learn/learn-python/module-1/3-python-basics.html#you-got-all-that",
    "title": "Python basics",
    "section": "You got all that?",
    "text": "You got all that?\n\nNow it is your turn.\nTime for some hands on coding in Lesson 2."
  },
  {
    "objectID": "learn/learn-python/module-1/3-python-basics.html#computers-are-pedantic",
    "href": "learn/learn-python/module-1/3-python-basics.html#computers-are-pedantic",
    "title": "Python basics",
    "section": "Computers are pedantic!",
    "text": "Computers are pedantic!\n\nRemember that computers think in True and False, e.g. 1 and 0s. They are literal thinkers.\nEven one character being out of place can break an entire code base. So watch out for that unpaired quotation mark, look out for that space that should not be there, and make sure you match your indentations to your if statements.\nNow go have some fun in your tutor groups with hands-on coding and debugging."
  },
  {
    "objectID": "learn/learn-python/module-1/index.html",
    "href": "learn/learn-python/module-1/index.html",
    "title": "Module 1 - Where is the on switch?",
    "section": "",
    "text": "This is the first module of the CWC course, and is designed for those with very little to no experience with coding (programmatic, not clinical terminologies)."
  },
  {
    "objectID": "learn/learn-python/module-1/index.html#chose-a-slide-deck",
    "href": "learn/learn-python/module-1/index.html#chose-a-slide-deck",
    "title": "Module 1 - Where is the on switch?",
    "section": "Chose a slide deck",
    "text": "Chose a slide deck\n\n\n1 - Introduction\n\n\n2 - Coding environment\n\n\n3 - Python basics\n\n\n4 - Let’s build a web app\n\n\n5 - Session close"
  },
  {
    "objectID": "learn/learn-python/module-1/2-coding-environment.html",
    "href": "learn/learn-python/module-1/2-coding-environment.html",
    "title": "Coding environment (and the shell)",
    "section": "",
    "text": "We will be using the GitHub Codespace development environment.\nThis is a browser version of the well known desktop VS Code development environment.\nIn the context of this course, a development environment is synonymous with the teaching environment."
  },
  {
    "objectID": "learn/learn-python/module-1/2-coding-environment.html#todays-hands-on-sessions",
    "href": "learn/learn-python/module-1/2-coding-environment.html#todays-hands-on-sessions",
    "title": "Coding environment (and the shell)",
    "section": "Today’s hands-on sessions",
    "text": "Today’s hands-on sessions\n\nWe will be using the GitHub Codespace development environment.\nThis is a browser version of the well known desktop VS Code development environment.\nIn the context of this course, a development environment is synonymous with the teaching environment."
  },
  {
    "objectID": "learn/learn-python/module-1/2-coding-environment.html#commands",
    "href": "learn/learn-python/module-1/2-coding-environment.html#commands",
    "title": "Coding environment (and the shell)",
    "section": "Commands",
    "text": "Commands\n\nA command is a piece of code that carries out a specific task.\nThese tasks can be as simple as showing you what folder you are in, to printing, changing settings, and updating the operating system."
  },
  {
    "objectID": "learn/learn-python/module-1/2-coding-environment.html#using-the-terminal",
    "href": "learn/learn-python/module-1/2-coding-environment.html#using-the-terminal",
    "title": "Coding environment (and the shell)",
    "section": "Using the terminal",
    "text": "Using the terminal\n\nAlso called the command line interface (CLI) or the shell.\n\nSteps:\n\nSelect the terminal (aka click on it).\nType in your command (this needs to be typed out exactly).\nPress enter to run the command.\n\nPro tip:\n\nIf you want to run a previously run command, you can select it with the ↑ and ↓ arrow keys on the keyboard."
  },
  {
    "objectID": "learn/learn-python/module-1/2-coding-environment.html#list-files-and-folders-command",
    "href": "learn/learn-python/module-1/2-coding-environment.html#list-files-and-folders-command",
    "title": "Coding environment (and the shell)",
    "section": "List files and folders command",
    "text": "List files and folders command\n\nThe ls command."
  },
  {
    "objectID": "learn/learn-python/module-1/2-coding-environment.html#change-directory-command",
    "href": "learn/learn-python/module-1/2-coding-environment.html#change-directory-command",
    "title": "Coding environment (and the shell)",
    "section": "Change directory command",
    "text": "Change directory command\n\nThe cd command.\ncd .. takes you back to the previous (parent) folder."
  },
  {
    "objectID": "learn/learn-python/module-1/2-coding-environment.html#where-am-i",
    "href": "learn/learn-python/module-1/2-coding-environment.html#where-am-i",
    "title": "Coding environment (and the shell)",
    "section": "Where am I?",
    "text": "Where am I?\n\npwd is the print working directory command."
  },
  {
    "objectID": "learn/learn-python/module-1/2-coding-environment.html#liveshare",
    "href": "learn/learn-python/module-1/2-coding-environment.html#liveshare",
    "title": "Coding environment (and the shell)",
    "section": "LiveShare",
    "text": "LiveShare\n\nWe will be using liveshare for the hands-on learning sessions. This is an extension of Codespace (and VS Code) that allows others to work (and learn) in the same development environment."
  },
  {
    "objectID": "learn/learn-python/module-1/2-coding-environment.html#codespace-view",
    "href": "learn/learn-python/module-1/2-coding-environment.html#codespace-view",
    "title": "Coding environment (and the shell)",
    "section": "Codespace view",
    "text": "Codespace view"
  },
  {
    "objectID": "learn/learn-python/module-1/2-coding-environment.html#lession-1",
    "href": "learn/learn-python/module-1/2-coding-environment.html#lession-1",
    "title": "Coding environment (and the shell)",
    "section": "Lession 1",
    "text": "Lession 1\n\nJoin your tutor group in the Zoom break out rooms.\nFollow the link to the online learning environment (Codespace).\nChange the directory (don’t type the $. This is just how we show this is the command line):\n\n    $ cd users/{your_name}/module-1/hands-on\n\nReplace {your_name} with your own name in the format firstname underscore lastname, eg john_doe.\nRun the following command in the new directory\n\n    $ python lession_1.py\n\nDid it work? If so, open up the lession_1.py file.\nAny problems, just ask your tutor for help.\nThere is no such thing as a stupid question, only the question left unanswered.\nWe will give you 20 minutes for lession 1."
  },
  {
    "objectID": "learn/learn-python/index.html",
    "href": "learn/learn-python/index.html",
    "title": "Programming in healthcare",
    "section": "",
    "text": "Welcome to the Programming in healthcare course on learning how to code. This course has been designed for the beginner, all the way up to the advanced programmer."
  },
  {
    "objectID": "learn/learn-python/index.html#modules",
    "href": "learn/learn-python/index.html#modules",
    "title": "Programming in healthcare",
    "section": "Modules",
    "text": "Modules\n\nModule 1 - Where is the on switch?\nModule 2 - Let’s take things to the next level\n\nMore modules to arrive soon"
  },
  {
    "objectID": "learn/learn-python/module-2/1-introduction.html",
    "href": "learn/learn-python/module-2/1-introduction.html",
    "title": "Module 2 - Let’s take things to the next level",
    "section": "",
    "text": "Welcome and thank you for joining our course.\nWe hope you enjoy the course and find it helpful.\nThere are plans for further, more advanced courses, in the near future.\nPlease provide feedback at the end of the course, so we can help improve things further."
  },
  {
    "objectID": "learn/learn-python/module-2/1-introduction.html#introduction",
    "href": "learn/learn-python/module-2/1-introduction.html#introduction",
    "title": "Module 2 - Let’s take things to the next level",
    "section": "",
    "text": "Welcome and thank you for joining our course.\nWe hope you enjoy the course and find it helpful.\nThere are plans for further, more advanced courses, in the near future.\nPlease provide feedback at the end of the course, so we can help improve things further."
  },
  {
    "objectID": "learn/learn-python/module-2/index.html",
    "href": "learn/learn-python/module-2/index.html",
    "title": "Module 2 - Let’s take things to the next level",
    "section": "",
    "text": "After learning about the basics about coding and the programming language Python in Module 2 - Let’s take things to the next level"
  },
  {
    "objectID": "learn/learn-python/module-2/index.html#chose-a-slide-deck",
    "href": "learn/learn-python/module-2/index.html#chose-a-slide-deck",
    "title": "Module 2 - Let’s take things to the next level",
    "section": "Chose a slide deck",
    "text": "Chose a slide deck\n\n\n1 - Introduction"
  },
  {
    "objectID": "learn/learn-python/module-1/1-introduction.html",
    "href": "learn/learn-python/module-1/1-introduction.html",
    "title": "Module 1 - Where is the on switch?",
    "section": "",
    "text": "Welcome and thank you for joining our course.\nWe hope you enjoy the course and find it helpful.\nThere are plans for further, more advanced courses, in the near future.\nPlease provide feedback at the end of the course, so we can help improve things further."
  },
  {
    "objectID": "learn/learn-python/module-1/1-introduction.html#introduction",
    "href": "learn/learn-python/module-1/1-introduction.html#introduction",
    "title": "Module 1 - Where is the on switch?",
    "section": "",
    "text": "Welcome and thank you for joining our course.\nWe hope you enjoy the course and find it helpful.\nThere are plans for further, more advanced courses, in the near future.\nPlease provide feedback at the end of the course, so we can help improve things further."
  },
  {
    "objectID": "learn/learn-python/module-1/1-introduction.html#the-coding-environment",
    "href": "learn/learn-python/module-1/1-introduction.html#the-coding-environment",
    "title": "Module 1 - Where is the on switch?",
    "section": "The coding environment",
    "text": "The coding environment\n\nWe will explore the development (teaching) environment.\nGet you connected to the development environment.\nGet you running some common command line functions in Lession 1."
  },
  {
    "objectID": "learn/learn-python/module-1/1-introduction.html#python-basics",
    "href": "learn/learn-python/module-1/1-introduction.html#python-basics",
    "title": "Module 1 - Where is the on switch?",
    "section": "Python Basics",
    "text": "Python Basics\n\nHow do we communicate with computers.\nIntroduction to the python programming language.\nLearn about:\n\nSyntax\nVariables\nOperators\nControl flow\nFunctions\nError handling\n\nThen get you programming in Lesson 2."
  },
  {
    "objectID": "learn/learn-python/module-1/1-introduction.html#build-an-app",
    "href": "learn/learn-python/module-1/1-introduction.html#build-an-app",
    "title": "Module 1 - Where is the on switch?",
    "section": "Build an app",
    "text": "Build an app\n\nFinally, we will get you building your own clinical app"
  },
  {
    "objectID": "learn/learn-python/module-1/1-introduction.html#why-learn-to-code",
    "href": "learn/learn-python/module-1/1-introduction.html#why-learn-to-code",
    "title": "Module 1 - Where is the on switch?",
    "section": "Why learn to code?",
    "text": "Why learn to code?\n\nWe learn biology and anatomy at university to better understand and practice clinical medicine. Why don’t we learn the base subject to better understand and practice digital medicine?\nOf course not all clinicians should be expected to have extensive knowledge in coding and digital health; that would take clinicians away from the front line, and also clinicians are expensive coders.\nHowever, having a small number of subject matter experts in both disciplines can be highly advantageous to implementing better and safer digital health projects."
  },
  {
    "objectID": "learn/learn-python/module-1/1-introduction.html#how-can-you-use-your-coding-skills-in-health-care",
    "href": "learn/learn-python/module-1/1-introduction.html#how-can-you-use-your-coding-skills-in-health-care",
    "title": "Module 1 - Where is the on switch?",
    "section": "How can you use your coding skills in health care?",
    "text": "How can you use your coding skills in health care?\n\nData analytics\nBuilding apps\nInteroperability\nAutomate routine tasks\nHelp lead a software development team with knowledge of both digital and clinical aspects.\nIndeed, anything digital"
  },
  {
    "objectID": "learn/learn-python/module-1/1-introduction.html#tutor-groups",
    "href": "learn/learn-python/module-1/1-introduction.html#tutor-groups",
    "title": "Module 1 - Where is the on switch?",
    "section": "Tutor groups",
    "text": "Tutor groups\n\nHas everyone been placed in a tutor group?"
  },
  {
    "objectID": "learn/learn-python/module-1/1-introduction.html#off-we-go-to-the-shell",
    "href": "learn/learn-python/module-1/1-introduction.html#off-we-go-to-the-shell",
    "title": "Module 1 - Where is the on switch?",
    "section": "Off we go to the shell",
    "text": "Off we go to the shell"
  },
  {
    "objectID": "learn/learn-python/module-1/5-session-close.html",
    "href": "learn/learn-python/module-1/5-session-close.html",
    "title": "Session close",
    "section": "",
    "text": "Many thanks for joining us today.\nWe hope you found today’s session helpful and a great start / addition to your digital health carer.\nCould you please complete feedback before you leave.\nPlease join us for more advanced courses, due out soon."
  },
  {
    "objectID": "learn/learn-python/module-1/5-session-close.html#many-thanks",
    "href": "learn/learn-python/module-1/5-session-close.html#many-thanks",
    "title": "Session close",
    "section": "Many thanks",
    "text": "Many thanks\n\nMany thanks for joining us today.\nWe hope you found today’s session helpful and a great start / addition to your digital health carer.\nCould you please complete feedback before you leave.\nPlease join us for more advanced courses, due out soon."
  },
  {
    "objectID": "learn/learn-python/module-1/4-lets-build.html#streamlit",
    "href": "learn/learn-python/module-1/4-lets-build.html#streamlit",
    "title": "🎵 Do you want to build a web app? 🎵",
    "section": "Streamlit",
    "text": "Streamlit\n\nWe will be using a python web app framework called Streamlit.\nFrameworks are great, as someone else has done most of the heavy coding to make it easier for you to carry out a task (in this case building a web app)."
  },
  {
    "objectID": "learn/learn-python/module-1/4-lets-build.html#preinstalled-for-you",
    "href": "learn/learn-python/module-1/4-lets-build.html#preinstalled-for-you",
    "title": "🎵 Do you want to build a web app? 🎵",
    "section": "Preinstalled for you",
    "text": "Preinstalled for you\n\nWe have preinstalled Streamlit on Codespace for you.\nTime for lession 3.\nStay in the module-1/hands-on folder.\nRun this code:\n\n\n    $ streamlit run lesson_3.py"
  },
  {
    "objectID": "learn/learn-python/module-1/2-coding-environment.html#codespace-light-theme",
    "href": "learn/learn-python/module-1/2-coding-environment.html#codespace-light-theme",
    "title": "Coding environment (and the shell)",
    "section": "Codespace light theme",
    "text": "Codespace light theme"
  },
  {
    "objectID": "learn/learn-python/module-1/2-coding-environment.html#codespace-dark-theme",
    "href": "learn/learn-python/module-1/2-coding-environment.html#codespace-dark-theme",
    "title": "Coding environment (and the shell)",
    "section": "Codespace dark theme",
    "text": "Codespace dark theme"
  },
  {
    "objectID": "learn/learn-python/module-1/2-coding-environment.html#codespace-layout",
    "href": "learn/learn-python/module-1/2-coding-environment.html#codespace-layout",
    "title": "Coding environment (and the shell)",
    "section": "Codespace layout",
    "text": "Codespace layout"
  },
  {
    "objectID": "learn/learn-python/module-1/4-lets-build.html#what-to-build",
    "href": "learn/learn-python/module-1/4-lets-build.html#what-to-build",
    "title": "🎵 Do you want to build a web app? 🎵",
    "section": "What to build?",
    "text": "What to build?"
  },
  {
    "objectID": "learn/index.html#coding-programmatic",
    "href": "learn/index.html#coding-programmatic",
    "title": "Education",
    "section": "Coding (programmatic)",
    "text": "Coding (programmatic)\nThere are so many programming languages to choose from. We could argue for hours about which would be best to learn as a beginner in healthcare. Python is a very popular language that provides powerful tools to build healthcare apps, conduct data analysis, and even implement machine learning. Below, we provide you with resources to learn this very versatile language.\n\nLearn to code in python"
  },
  {
    "objectID": "learn/index.html#ask-a-clinician",
    "href": "learn/index.html#ask-a-clinician",
    "title": "Education",
    "section": "Ask a clinician",
    "text": "Ask a clinician\nComing soon: Ask a clinician learning series. A place for non-clinicians to ask clinicians about their thought processes and workflows, amongst other things. Further information and recordings will be found here."
  },
  {
    "objectID": "learn/index.html#clinical-informatics",
    "href": "learn/index.html#clinical-informatics",
    "title": "Education",
    "section": "Clinical informatics",
    "text": "Clinical informatics\nInterested in becoming a clinical informatician, view a syllabus in the making here.\nInterested in becoming a clinician-who-codes, view a syllabus in the making here here."
  },
  {
    "objectID": "tickets/index.html",
    "href": "tickets/index.html",
    "title": "Tickets for Let’s Do Digital Events",
    "section": "",
    "text": "Programming in Healthcare - Module 1"
  },
  {
    "objectID": "tickets/index.html#programming-in-healthcare---module-1",
    "href": "tickets/index.html#programming-in-healthcare---module-1",
    "title": "Tickets for Let’s Do Digital Events",
    "section": "",
    "text": "Please join us for the first of many coding courses in health care that the Let’s Do Digital team will be running. This course is open to anyone, but has been designed for those working or interested in digital healthcare / clincal informatics. Module 1 is designed for those with little to no knowledge in coding. We will gently take you through what is the command line, how to run a command, how to program the basics, and even build your own web app (it is not as hard as you think). The programming language we will be using is Python. Python is a well respected programming language, that is very versertile. You can build simple programs at one end and run data analysis, machine learning / AI and build extensive web apps at the other.\n\n\n\n\n\nHave questions about the course or anything else Let’s Do Digital related, email us at info@letsdodigital.org."
  },
  {
    "objectID": "learn/learn-python/module-1/index.html#get-coding",
    "href": "learn/learn-python/module-1/index.html#get-coding",
    "title": "Module 1 - Where is the on switch?",
    "section": "Get coding",
    "text": "Get coding\nThe code for this course can be found below\n\n\nModule 1 code\n\n\nYou can copy or fork the above code. During teaching sessions, a development (teaching) environment will be set up for you."
  },
  {
    "objectID": "contacts.html",
    "href": "contacts.html",
    "title": "Contacts",
    "section": "",
    "text": "Have questions or concerns you want to raise that are Let’s Do Digital related, email us at info@letsdodigital.org."
  },
  {
    "objectID": "tickets/programming-in-healthcare-module-1-July-2024.html",
    "href": "tickets/programming-in-healthcare-module-1-July-2024.html",
    "title": "Programming in healthcare - module 1",
    "section": "",
    "text": "Please join us for the first of many coding courses in healthcare that the Let’s Do Digital team will be running. This course is open to anyone but has been designed for those working or interested in digital healthcare / clinical informatics. Module 1 is designed for those with little to no knowledge in coding. We will gently take you through what the command line is, how to run a command, how to program the basics, and even build your own web app (it is not as hard as you think). The programming language we will be using is Python. Python is a well-respected programming language that is very versatile. You can build simple programs at one end and run data analysis, machine learning/AI, and build extensive web apps at the other."
  },
  {
    "objectID": "tickets/programming-in-healthcare-module-1-July-2024.html#module-1",
    "href": "tickets/programming-in-healthcare-module-1-July-2024.html#module-1",
    "title": "Tickets for Let’s Do Digital Events",
    "section": "",
    "text": "Please join us for the first of many coding courses in health care that the Let’s Do Digital team will be running. This course is open to anyone, but has been designed for those working or interested in digital healthcare / clincal informatics. Module 1 is designed for those with little to no knowledge in coding. We will gently take you through what is the command line, how to run a command, how to program the basics, and even build your own web app (it is not as hard as you think). The programming language we will be using is Python. Python is a well respected programming language, that is very versertile. You can build simple programs at one end and run data analysis, machine learning / AI and build extensive web apps at the other."
  },
  {
    "objectID": "tickets/programming-in-healthcare-module-1-July-2024.html#topics-covered",
    "href": "tickets/programming-in-healthcare-module-1-July-2024.html#topics-covered",
    "title": "Programming in healthcare - module 1",
    "section": "Topics covered",
    "text": "Topics covered\nThe below topics may sound extensive and “out worldly” to the novice, but do not worry. We will show you exactly what each concept entails and take you through worked examples to better understand and utilise each one.   * The terminal (the black window where you type in commands) * Syntax (the coding grammar) * Variables (where you store things) * Comments (stuff to read later when you have no idea what the code is supposed to do) * Control flow (if this then that) * Expressions and operators (add these two things. Make x equal to 3) * Functions (hay function, calculate the square root of 9) * Error handling (you were trying to do what!) * Web apps * Medical calculators"
  },
  {
    "objectID": "tickets/programming-in-healthcare-module-1-July-2024.html#course-structure",
    "href": "tickets/programming-in-healthcare-module-1-July-2024.html#course-structure",
    "title": "Programming in healthcare - module 1",
    "section": "Course structure",
    "text": "Course structure\nWe now have 11 tutors and 41 potential students signed up (on the mailing list) for the event. We will have a mixture of presentations to introduce you to the topics of the module followed by hands on sessions, getting you coding straight away (you don’t even need a coding environment on your computer, as we will be using a browser based solution). We will have break out rooms for the hands on coding sessions, with 4-6 students per tutor."
  },
  {
    "objectID": "tickets/programming-in-healthcare-module-1-July-2024.html#purchase-tickets",
    "href": "tickets/programming-in-healthcare-module-1-July-2024.html#purchase-tickets",
    "title": "Programming in healthcare - module 1",
    "section": "Purchase tickets",
    "text": "Purchase tickets\n\n    \n        \n            \n                \n            \n        \n        \n            Prices for this event are £50 per student. Click on the ticket to be buy ticket(s) at *buymeacofee.com*.\n        \n    \n    \n        \n            \n                \n            \n        \n        \n            If you feel that £50 is too much for this 3 hour course with tutor support, then we offer a lower value of £25 per ticket. Before you consider this lower priced ticket, please do remember that a lot of time and effort has gone into creating this course."
  },
  {
    "objectID": "tickets/programming-in-healthcare-module-1-July-2024.html#questions",
    "href": "tickets/programming-in-healthcare-module-1-July-2024.html#questions",
    "title": "Programming in healthcare - module 1",
    "section": "Questions",
    "text": "Questions\nHave questions about the course or anything else Let’s Do Digital related, email us at info@letsdodigital.org."
  },
  {
    "objectID": "tickets/programming-in-healthcare-module-1-June-2024.html",
    "href": "tickets/programming-in-healthcare-module-1-June-2024.html",
    "title": "Programming in Healthcare - Module 1",
    "section": "",
    "text": "Please join us for the first of many coding courses in healthcare that the Let’s Do Digital team will be running. This course is open to anyone but has been designed for those working or interested in digital healthcare / clinical informatics. Module 1 is designed for those with little to no knowledge in coding. We will gently take you through what the command line is, how to run a command, how to program the basics, and even build your own web app (it is not as hard as you think). The programming language we will be using is Python. Python is a well-respected programming language that is very versatile. You can build simple programs at one end and run data analysis, machine learning/AI, and build extensive web apps at the other."
  },
  {
    "objectID": "tickets/programming-in-healthcare-module-1-June-2024.html#course-structure",
    "href": "tickets/programming-in-healthcare-module-1-June-2024.html#course-structure",
    "title": "Programming in Healthcare - Module 1",
    "section": "Course structure",
    "text": "Course structure\nWe now have 11 tutors and 41 potential students signed up (on the mailing list) for the event. We will have a mixture of presentations to introduce you to the topics of the module followed by hands on sessions, getting you coding straight away (you don’t even need a coding environment on your computer, as we will be using a browser based solution). We will have break out rooms for the hands on coding sessions, with 4-6 students per tutor."
  },
  {
    "objectID": "tickets/programming-in-healthcare-module-1-June-2024.html#when-and-where",
    "href": "tickets/programming-in-healthcare-module-1-June-2024.html#when-and-where",
    "title": "Programming in Healthcare - Module 1",
    "section": "When and where",
    "text": "When and where\nOnline, Thursday 27th June, 2-5 pm, on Zoom."
  },
  {
    "objectID": "tickets/programming-in-healthcare-module-1-June-2024.html#topics-covered",
    "href": "tickets/programming-in-healthcare-module-1-June-2024.html#topics-covered",
    "title": "Programming in Healthcare - Module 1",
    "section": "Topics covered",
    "text": "Topics covered\nThe below topics may sound extensive and “out worldly” to the novice, but do not worry. We will show you exactly what each concept entails and take you through worked examples to better understand and utilise each one.\n\nThe terminal (the black window where you type in commands)\nSyntax (the coding grammar)\nVariables (where you store things)\nComments (stuff to read later when you have no idea what the code is supposed to do)\nControl flow (if this then that)\nExpressions and operators (add these two things. Make x equal to 3)\nFunctions (hay function, calculate the square root of 9)\nError handling (you were trying to do what!)\nWeb apps\nMedical calculators"
  },
  {
    "objectID": "tickets/programming-in-healthcare-module-1-June-2024.html#purchase-tickets",
    "href": "tickets/programming-in-healthcare-module-1-June-2024.html#purchase-tickets",
    "title": "Programming in Healthcare - Module 1",
    "section": "Purchase tickets",
    "text": "Purchase tickets\n\n    \n        \n            \n                \n            \n        \n        \n            Prices for this event are £50 per student. Click on the ticket to be buy ticket(s) at buymeacoffee.com\n        \n    \n    \n        \n            \n                \n            \n        \n        \n            If you feel that £50 is too much for this 3 hour course with tutor support, then we offer a lower value of £25 per ticket. Before you consider this lower priced ticket, please do remember that a lot of time and effort has gone into creating this course."
  },
  {
    "objectID": "tickets/programming-in-healthcare-module-1-June-2024.html#questions",
    "href": "tickets/programming-in-healthcare-module-1-June-2024.html#questions",
    "title": "Programming in Healthcare - Module 1",
    "section": "Questions",
    "text": "Questions\nHave questions about the course or anything else Let’s Do Digital related, email us at info@letsdodigital.org."
  },
  {
    "objectID": "sponsor.html",
    "href": "sponsor.html",
    "title": "Sponsor the team",
    "section": "",
    "text": "There is a hard working team behind the Let’s Do Digital name. If you feel we are doing a great job and want to help support us with our projects and teaching courses, then please do consider buying us a coffee:\n\n\n    \n\n\nA single sponsorship over £50 (UK) or signing up as a member on buymeacoffee.com will get you a place on the wall of our home page for individual supporters.\nFor healthcare groups (eg industry, individual trusts, government) that wish to sponosor the Let’s Do Digital Team, please contact us at info@letsdodigital.org."
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contacts",
    "section": "",
    "text": "Have questions or concerns you want to raise that are Let’s Do Digital related, email us at info@letsdodigital.org."
  },
  {
    "objectID": "learn/index.html#coding-cheatsheets",
    "href": "learn/index.html#coding-cheatsheets",
    "title": "Education",
    "section": "Coding cheatsheets",
    "text": "Coding cheatsheets\nA collection of code and commands."
  }
]