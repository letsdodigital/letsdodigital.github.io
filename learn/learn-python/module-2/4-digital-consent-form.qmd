---
title: "Building a digital consent form"
subtitle: "Module 2"
author: "{{< var author >}}"
format: revealjs
logo: /media/ldd-logo.png
css: /slides.css
title-slide-attributes:
    data-background-image: /media/signature-on-form.jpg
    data-background-opacity: "0.4"
---

# Lesson 2 - Let's build a digital consent app


## So, where to start?

* Don't worry, we will get you coding soon.
* However, it is probably a good idea to make sure you are familiar with all of the coding concepts you need to build a `digital consent form`.


## We are going to be building a...

* A web based digital healthcare app
* This needs a frontend and and backend
    * Frontend - what you see and interact with
    * The brains (in most cases) and data storage of your app


## What is a web browser

* What is a web browser
* What languages do we use in web browsers - JS, TS, HTML, CSS, more fancy ones (XML)


## We are going to cheat

* As we do not have time to build both the front and backend, we have created a cloud database (specifically `suprabase`) for you to connect to
* The "brains" and frontend will be managed by the `streamlit` server that you will build.
* A server is basically a computer program that provides you with a web page to interact with


## We need a python virtual environment

* If you do not see (.venv) on your command line, as a tutor to help get it up and running.


## What is a library

* You will be using different libraries in this build
* A library is basically a collection of code that provides set functionality
* You need to `import` libraries to use them


## What is an API

* An application process interface (API) is a means for computer programs, on the same computer or over networks or even the internet to communicate together.


## Data in a database

* Much like a spreadsheet, data is stored in a database in `tables`
* Each row in the database is called a `record`
* You `query` the database to get data from it
* Queries in streamlit get all data. Really should only get the data you need


## Python related material 1

* what is a function, how to write one. (Anatomy of a function)
* List comprehension, how to read and write them
* What is state
* Return nothing = `return`
* global variables

## Python related material 2

* Anatomy of the for loop. Loop variable. The use of `else` with for loops. `breaks`
* Don't forget indentation and colons `:`
* `all` statement
* Initialising variables


## Frontend related material (in streamlit)
* Field labels, keys, on_change, lists for selectbox
* field types - st.text, st.selectbox, st.error


## Have the slides on hand

* Make sure you have the slides on hand - `https://letsdodigital.org/learn/learn-python/module-2/`
* You will likely need them as you build your digital consent form.
* Recommend doing small changes to code saving, and checking what happens in the browser

## Ask

* Please please please ask questions of your tutor. That is why they are here.

`There is no such thing as a stupid question, only a question left unanswered`

## Nuances of streamlit

* When you update the code and save, click "Always rerun" (top right) in the browser to always refresh on code change.
* Sometimes you need to refresh the browser to get certain codes changes to work
* Streamlit.io reruns the whole script whenever you interact with the browser (eg click something, select something, type something, press a button)
* Why the text field and selectbox outside of the form. Because Streamlit.io does not allow for dynamic update within forms before submitting


## Want further output to the browser?

* magicEnabled = false


## Linting / formatting

* Strange line dropping in VScode (linting, formatting)


## Where to start

* Pick a terminal (there should be loads to choose from)
* Go to...

```{.bash}
cd users/[your_name]/module_2/
```

and then run

```{.bash}
streamlit run lesson_2.py
```


## This will run

```{.python filename="lesson_2.py"}
def main():
    st.title("Hello")
    st.text("Hello World!")

    return


if __name__ == "__main__":
    main()
```

And...


## Start the browser

Picture of browser


# Pit stop

* Half way through
* How is it going? 
* What are people getting stuck on?


# Now go!

* Go join your breakout rooms again
* Ask away
* You will find it frustrating when code does not work straight away. However this is how you learn. Try writing code in different ways to see if you can get it to work
* Ask!
* Look up material in the slides
* Worse case scenario, look at the answers, which are basically in the following exercise (but keep this cheat to last)